<?php
/**
 * @file
 * Code for the Country feature.
 */

include_once 'country.features.inc';

/**
 * Defines menu items and page callbacks.
 *
 * @return
 *   An associative array of properties for each path.
 */
function country_menu() {
  $items['country'] = array(
    'title' => t('Country'),
    'page callback' => 'country_view',
    'access arguments' => array('access content')
  );

  return $items;
}

function _country_load_by_iso2($iso2) {
  $query = new EntityFieldQuery();
  $result = $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'country')
    ->fieldCondition('field_country_iso2', 'value', $iso2)
    ->execute();

  if (!empty($result['node'])) {
    $nid = current($result['node'])->nid;
    $node = node_load($nid);

    return $node;
  }

  return FALSE;
}

function _country_load_by_iso3($iso3) {
  $query = new EntityFieldQuery();
  $result = $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'country')
    ->fieldCondition('field_country_iso3', 'value', $iso3)
    ->execute();

  if (!empty($result['node'])) {
    $nid = current($result['node'])->nid;
    $node = node_load($nid);

    return $node;
  }

  return FALSE;
}

/**
 * Registers module's theme implementations.
 *
 * @return
 *   An associative array of theme hook information.
 */
function country_theme() {
  return array(
    'country' => array(
      'variables' => array(
        'country' => NULL
      )
    )
  );
}

/**
 * Displays the countries map page when the user visits the path.
 *
 * @return
 *   String representing the content of the page.
 */
function country_view($iso2 = NULL) {
  return theme('country', array(
    'country' => _country_load_by_iso2($iso2)
  ));
}
