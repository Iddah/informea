<?php
/**
 * @file
 * Code for the Country feature.
 */

include_once 'country.features.inc';

/**
 *  Implements hook_url_inbound_alter().
 */
function country_url_inbound_alter(&$path, $original_path, $path_language) {
  if($node = country_url_match_node($path)) {
    $path = 'node/' . $node->nid;
  }
}

function country_url_match_node($path) {
  module_load_include('inc', 'country', 'country.api');
  if (arg(0, $path) == 'countries') {
    if ($node = country_load_by_iso2(arg(1, $path))) {
      return $node;
    }
  } else if(strlen(arg(0, $path)) == 2) { // Assume language prefix @todo enhance
    if (arg(1, $path) == 'countries') {
      if ($node = country_load_by_iso2(arg(2, $path))) {
        return $node;
      }
    }
  }
  return FALSE;
}

/**
 * Implements hook_menu().
 */
//function country_menu() {
//  return array(
//    'countries' => array(
//      'title' => t('Countries'),
//      'description' => t('Map of countries'),
//      'type' => MENU_NORMAL_ITEM,
//      'page callback' => 'country_level1_page',
//      'access arguments' =>  array('access content'),
//    ),
//  );
//}

/**
 * Implements hook_theme().
 *
 * {@inheritdoc}
 */
function country_theme() {
  return array(
    'country_map' => array(
      'render element' => 'element',
      'template' => 'templates/country-map',
      'variables' => array(),
      'path' => drupal_get_path('module', 'country'),
    ),
  );
}

/**
 *  Implements hook_node_view().
 */
function country_node_view($node, $view_mode, $langcode) {
  if($node->type == 'country' && $view_mode == 'full') {
    // Adds the country JavaScript file to the page.
    drupal_add_js(drupal_get_path('module', 'country') . '/js/country.js');

    $context = country_url_context(request_path());
    if(empty($context)) {
      $context = 'map';
    }
    $node->context = $context;
    if ($context != 'summary') {
      foreach(element_children($node->content) as $field_name) {
        hide($node->content[$field_name]);
      }
    }
    $breadcrumbs = array(
      l(t('Countries'), 'countries'),
      l($node->title, 'node/' . $node->nid),
    );
    switch($context) {
      case 'summary':
        $breadcrumbs[] = t('Summary');
        module_load_include('inc', 'country', 'country.undata.inc');
        $rUN = new UNDataOrgParser($node->nid, $node->title_original);
        $node->content['context'] = array(
          '#type' => 'item',
          '#markup' => $rUN->get_environmental_data(),
          '#weight' => 10,
          '#prefix' => '<hr /><div class="un-data">',
          '#suffix' => t('Data provided by <a href=""><span style="color: #41599A; font-size: 1em;">UN</span><span style="color: #F60; font-size: 1em;">data</span></a>') . '</div>',
        );
        break;

      case 'ecolex':
        $breadcrumbs[] = t('ECOLEX');

        $legislation_url = ecolex_remote_url('country', $node->nid, 'legislation');
        $courdecisions_url = ecolex_remote_url('country', $node->nid, 'courtdecisions');
        $literature_url = ecolex_remote_url('country', $node->nid, 'literature');

        $elements = array(
          'legislation' => array(
            'header' => t('Legislation'),
            'body' => sprintf('<iframe class="ecolex" src="%s"></iframe>', $legislation_url) .
                l(t('View more results on ECOLEX website'), $legislation_url, array('attributes' => array('class' => array('ecolex-link'), 'target' => '_blank')))
          ),
          'courtdecisions' => array(
            'header' => t('Court decisions'),
            'body' => sprintf('<iframe class="ecolex" src="%s"></iframe>', $courdecisions_url) .
                l(t('View more results on ECOLEX website'), $courdecisions_url, array('attributes' => array('class' => array('ecolex-link'), 'target' => '_blank')))
          ),
          'literature' => array(
            'header' => t('Literature'),
            'body' => sprintf('<iframe class="ecolex" src="%s"></iframe>', $literature_url) .
                l(t('View more results on ECOLEX website'), $literature_url, array('attributes' => array('class' => array('ecolex-link'), 'target' => '_blank')))
          )
        );
        drupal_add_js(drupal_get_path('module', 'thesaurus') . '/js/concept.js');
        $node->content['context'] = array(
          'heading' => array(
            '#id' => 'disclaimer',
            '#type' => 'item',
            '#markup' => t('The content of this this area is exclusively provided by <a href="http://www.ecolex.org">ECOLEX</a> - the gateway to environmental law, which is a collaboration of IUCN, FAO and UNEP.')
          ),
          'tabs' => array(
            '#id' => 'ecolex-tabs',
            '#theme' => 'informea_bootstrap_tabs',
            '#elements' => $elements,
          )
        );
        break;
      case 'map':
        $breadcrumbs = array(
          l(t('Countries'), 'countries'),
          $node->title,
        );
        $wrapper = entity_metadata_wrapper('node', $node);
        $latitude = $wrapper->field_latitude->value();
        $longitude = $wrapper->field_longitude->value();
        $zoom = $wrapper->field_zoom->value();
        $has_map = $latitude && $longitude && $zoom;
        $sites = country_get_sites($node->nid);
        $js_sites = array();
        foreach($sites as $site) {
          $js_sites[] = entity_metadata_wrapper('node', $site)->value();
        }
        if ($has_map) {
          drupal_add_js( '//maps.googleapis.com/maps/api/js?v=3.exp', 'external' );
          // Adds the country JavaScript file to the page.
          drupal_add_js( drupal_get_path( 'module', 'country' ) . '/js/map.js' );
          drupal_add_js(
            array(
              'map' => array(
                'latitude'  => $wrapper->field_latitude->value(),
                'longitude' => $wrapper->field_longitude->value(),
                'zoom'      => $wrapper->field_zoom->value(),
                'sites' => $js_sites,
              )
            ),
            array( 'type' => 'setting' )
          );
        }
        $view_ramsar = country_get_view_country_related_content($node->nid, 'ramsar_sites');
        $view_whc = country_get_view_country_related_content($node->nid, 'whc_sites');
        $view_ramsar_content = $view_ramsar->render();
        $view_whc_content = $view_whc->render();

        if (empty($view_ramsar->total_rows)) {
          $c = informea_no_content_available_block();
          $view_ramsar_content = drupal_render($c);
        }
        if (empty($view_whc->total_rows)) {
          $c = informea_no_content_available_block();
          $view_whc_content = drupal_render($c);
        }
        $tabs = array(
          'map' => array(
            'header' => t('Map of sites'),
            'body' => theme('country_map'),
            'active' => $has_map,
          ),
          'ramsar' => array(
            'header' => t('Ramsar sites <span class="badge">!count</span>', array('!count' => $view_ramsar->total_rows)),
            'body' => $view_ramsar_content,
            'active' => !$has_map,
          ),
          'whc' => array(
            'header' => t('WHC sites <span class="badge">!count</span>', array('!count' => $view_whc->total_rows)),
            'body' => $view_whc_content,
          )
        );
        if (!$has_map) {
          unset($tabs['map']);
        }
        $node->content['context'] = array(
          array('#type' => 'item', '#weight' => 10, '#markup' => theme('informea_bootstrap_tabs', array('elements' => $tabs)))
        );
        break;

      case 'national-reports':
        $breadcrumbs[] = t('National reports');
        module_load_include('inc', 'country_deliverable');
        module_load_include('inc', 'country_deliverable', 'country_deliverable.api');
        $rows = country_deliverable_national_reports_group_by_treaty($node->nid);
        if (empty($rows)) {
          $node->content['context'] = informea_no_content_available_block();
          return;
        }
        $node->content['context'] = country_deliverable_render_national_reports($rows, 'national_reports');
        break;

      case 'action-plans':
        $breadcrumbs[] = t('Action plans');
        module_load_include('inc', 'country_deliverable');
        module_load_include('inc', 'country_deliverable', 'country_deliverable.api');
        $rows = country_deliverable_action_plans_group_by_treaty($node->nid);
        if (empty($rows)) {
          $node->content['context'] = informea_no_content_available_block();
          return;
        }
        $node->content['context'] = country_deliverable_render_action_plans($rows, 'action_plans');
        break;

      case 'parties':
        $breadcrumbs[] = t('Party status');
        $rows = array();
        module_load_include('inc', 'country_data', 'country_data.api');
        module_load_include('php', 'informea', 'recaptcha/recaptchalib');
        $parties = country_data_country_get_parties($node->nid);
        foreach ($parties as $party) {
          $wrapper = entity_metadata_wrapper('node', $party);
          $treaty = $wrapper->field_treaty->value()[0];
          $date1 = $wrapper->field_party_date_1->value();
          $date1 = empty($date1) ? '&nbsp;' : format_date($date1, 'short');
          $date2 = $wrapper->field_party_date_2->value();
          $date2 = empty($date2) ? '&nbsp;' : format_date($date2, 'short');
          $status = $wrapper->field_party_status->value();
          $logo = treaty_url_logo($treaty);
          $row = array(
            'data' => array(
              $img = $logo . $wrapper->field_treaty->label(),
              array('data' => $date1, 'class' => 'text-center'),
              array('data' => $date2, 'class' => 'text-center'),
              array('data' => $status->name, 'class' => 'text-center')
            )
          );
          $nfps = country_data_get_treaty_focal_points($node->nid, $treaty->nid);
          if (count($nfps)) {
            $row['data'][] = array(
              'data' => sprintf('<a data-toggle="collapse" href="#nfp-%1$s" aria-expanded="false" aria-controls="nfp-%1$s"><i class="glyphicon glyphicon-user"></i></a>', $treaty->nid),
              'class' => 'text-center'
            );
          } else {
            $row['data'][] = '';
          }
          $rows[] = $row;
          if (count($nfps)) {
            $nfp_data = country_data_render_focal_points($nfps);
            $row = array(
              'class' => array('collapse'),
              'data' => array(array('data' => drupal_render($nfp_data), 'colspan' => 4)),
              'id' => array('nfp-' . $treaty->nid)
            );
            $rows[] = $row;
          }
        }
        if (empty($rows)) {
          $node->content['context'] = informea_no_content_available_block();
          return;
        }

        $table = array(
          'attributes' => array('id' => 'table-parties', 'class' => 'table-no-striping table-hover'),
          'header' => array(
            t('Treaty'),
            array('data' => t('Signature'), 'class' => array('text-center')),
            array('data' => t('Ratification'), 'class' => array('text-center')),
            array('data' => t('Status'), 'class' => array('text-center')),
            array('data' => t('Focal points'), 'class' => array('text-center'))
          ),
          'rows' => $rows
        );
        $node->content['context'] = array(
          '#type' => 'item', '#weight' => 10, '#markup' => theme('table', $table)
        );
        break;
    }
    informea_theme_set_page_breadcrumb($breadcrumbs);
  }
}

/**
 * Implements hook_page_alter().
 */
function country_page_alter(&$page) {
  if (!empty($page['content']['system_main']['nodes'])) {
    foreach ($page['content']['system_main']['nodes'] as $nid => &$node) {
      // Move legislation chart to secondary region
      if (isset($node['#node']->context) && $node['#node']->type == 'country') {
        if (isset( $node['context'] ) && is_array($node['context'])) {
          foreach ($node['context'] as $idx => $item) {
            if (isset( $item['#id'] ) && $item['#id'] == 'country_legislation_chart') {
              $page['sidebar_second'][] = $item;
              unset( $node['context'][0] );
            }
          }
        }
        // Hide fields in some view modes.
        switch ($node['#node']->context) {
          case 'action-plans':
          case 'court-decisions':
          case 'legislation':
          case 'literature':
          case 'map':
          case 'national-reports':
          case 'parties':
            foreach(element_children($node) as $element_id) {
              hide($node[$element_id]);
            }
            show($node['context']);
        }
      }
    }
  }
}

function country_country_contextual_menu_alter(&$contextual_menu, $node) {
  if ($node->type == 'country') {
    module_load_include('inc', 'country_data', 'country_data.api');
    $wrapper = entity_metadata_wrapper('node', $node);
    $iso2l = $wrapper->field_country_iso2->value();
    $node_url = url('countries/' . $iso2l, array('absolute' => TRUE));

    $contextual_menu = array(
      '#theme' => 'item_list',
      '#attributes' => array('class' => array('nav', 'nav-pills', 'nav-stacked'))
    );

    $menu_items = array(
      'map' => array(
        'title' => t('Map and sites'),
      ),
      'parties' => array(
        'title' => t('Party status'),
        'count' => country_data_get_member_party_count($node->nid)
      ),
      'action-plans' => array(
        'title' => t('Action plans'),
        'count' => country_get_action_plan_count($node->nid)
      ),
      'national-reports' => array(
        'title' => t('National reports'),
        'count' => country_get_national_report_count($node->nid)
      ),
      'ecolex' => array(
        'title' => t('ECOLEX'),
      ),
      'summary' => array(
        'title' => t('Summary'),
      ),
    );

    foreach ($menu_items as $path => $menu_item) {
      $text = isset($menu_item['count'])
        ? sprintf('<span class="badge pull-right">%d</span>%s', $menu_item['count'], $menu_item['title'])
        : $menu_item['title'];

      $list_item = array(
        'data' => l($text, $node_url . '/' . $path, array('html' => TRUE)),
        'role' => 'presentation'
      );

      if (isset($node->context) && $node->context == $path) {
        $list_item['class'][] = 'active';
      }
      if (isset($menu_item['count']) && $menu_item['count'] == 0) {
        $list_item['class'][] = 'disabled';
      }
      $contextual_menu['#items'][] = $list_item;
    }
    $contextual_menu['#items'][] = array(
      'data' => l(
        'View on UNEPLive' . '<span class="glyphicon glyphicon-new-window pull-right"></span>',
        sprintf('http://uneplive.org/country/index/%s', $iso2l),
        array(
          'attributes' => array(
            'target' => '_blank',
            'title' => t('View the available UNEPLive country profile.') . ' ' . t('Opens in a new window'),
          ),
          'html' => TRUE
        )
      ),
      'role' => 'presentation'
    );
  }
}


function country_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  if (isset($router_item['page_arguments'][0]->type) && $router_item['page_arguments'][0]->type == 'country') {
    $context_menu = array();
    $node = $router_item['page_arguments'][0];
    drupal_alter('country_contextual_menu', $context_menu, $node);
    $data['tabs'][1] = array(
      'count' => count($context_menu),
      'output' => $context_menu,
    );
  }
}

function country_get_stats() {
  module_load_include('inc', 'country_data', 'country_data.api');
  $countries = country_get_countries();
  $stats = array();
  foreach ($countries as $country) {
    $iso = $country->field_country_iso2['und'][0]['value'];
    if ($cache = cache_get('country_stats_count_' . $country->nid)) {
      $data = $cache->data;
    } else {
      $data = array(
        'nid' => $country->nid,
        'geographical_site' => country_get_site_count($country->nid),
        'member_party' => country_data_get_member_party_count($country->nid),
        'action_plan' => country_get_action_plan_count($country->nid),
        'national_report' => country_get_national_report_count($country->nid),
      );
      cache_set('country_stats_count_' . $country->nid, $data, 'cache', CACHE_TEMPORARY);
    }
    $stats[$iso] = $data;
  }
  return $stats;
}

//function country_level1_page() {
//  edw_amcharts_add_map('high');
//  // Format stats for balloon
//
//  $stats = country_get_stats();
//  $html_stats = array();
//  foreach ($stats as $iso2 => $stat) {
//    $arr = array();
//    if ($stat['geographical_site']) {
//      $arr[] = t('!count WHC and Ramsar sites', array('!count' => $stat['geographical_site']));
//    }
//    if ($stat['action_plan']) {
//      $arr[] = t('!count action plans', array('!count' => $stat['action_plan']));
//    }
//    if ($stat['national_report']) {
//      $arr[] = t('!count national reports', array('!count' => $stat['national_report']));
//    }
//    $w = entity_metadata_wrapper('node', $stat['nid']);
//    $label = $w->label();
//    if ($iso2 == 'GL') {
//      $label = t('Denmark');
//    }
//    if ($iso2 == 'TW') {
//      $label = t('China');
//    }
//    $html_stats[$iso2] = sprintf('<strong>%s</strong><br>%s', $label, implode(', ', $arr));
//  }
//  drupal_add_js(array('country' => array('stats' => $html_stats)), array('type' => 'setting'));
//  drupal_add_js(drupal_get_path('module', 'country') . '/js/countries.js');
//  drupal_add_js(drupal_get_path('module', 'country') . '/js/country.js');
//  $ret = array(
//    'map' => array(
//      '#type' => 'item',
//      '#markup' => '<div id="ammap_div" style="width: 100%; height: 600px"></div>',
//    )
//  );
//  return $ret;
//}
