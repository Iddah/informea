<?php
/**
 * @file
 * Code for the Country feature.
 */

include_once 'country.features.inc';

/**
 *  Implements hook_url_inbound_alter().
 */
function country_url_inbound_alter(&$path, $original_path, $path_language) {
  if($node = country_url_match_node($path)) {
    $path = 'node/' . $node->nid;
  }
}

function country_url_match_node($path) {
  module_load_include('inc', 'country', 'country.api');
  if (arg(0, $path) == 'countries') {
    if ($node = country_load_by_iso2(arg(1, $path))) {
      return $node;
    }
  } else if(strlen(arg(0, $path)) == 2) { // Assume language prefix @todo enhance
    if (arg(1, $path) == 'countries') {
      if ($node = country_load_by_iso2(arg(2, $path))) {
        return $node;
      }
    }
  }
  return FALSE;
}

function _country_bs_tabs($tabs) {
  $markup = '<div role="tabpanel">';
  $markup .= '<ul class="nav nav-tabs" role="tablist">';

  foreach ($tabs as $id => $tab) {
    $markup .= '<li role="presentation"' . (isset($tab['active']) && $tab['active'] ? ' class="active"' : '') . '><a href="#' . $id . '" aria-controls="' . $id . '" role="tab" data-toggle="tab">' . $tab['title'] . '</a></li>';
  }

  $markup .= '</ul>';
  $markup .= '<div class="tab-content">';

  foreach ($tabs as $id => $tab) {
    $markup .= '<div role="tabpanel" class="tab-pane' . (isset($tab['active']) && $tab['active'] ? ' active' : '') . '" id="' . $id . '">' . $tab['content'] . '</div>';
  }

  $markup .= '</div>';
  $markup .= '</div>';

  return $markup;
}


/**
 *  Implements hook_node_view().
 */
function country_node_view($node, $view_mode, $langcode) {
  if($node->type == 'country' && $view_mode == 'full') {
    // Adds the country JavaScript file to the page.
    drupal_add_js(drupal_get_path('module', 'country') . '/js/country.js');

    $context = country_url_context(request_path());
    if(empty($context)) {
      $context = 'map';
    }
    $node->context = $context;
    switch($context) {
      case 'map':
        $wrapper = entity_metadata_wrapper('node', $node);
        $latitude = $wrapper->field_latitude->value();
        $longitude = $wrapper->field_longitude->value();
        $zoom = $wrapper->field_zoom->value();
        $has_map = $latitude && $longitude && $zoom;
        $sites = country_get_sites($node->nid);
        $js_sites = array();
        foreach($sites as $site) {
          $js_sites[] = entity_metadata_wrapper('node', $site)->value();
        }
        if ($has_map) {
          // Adds the amCharts JavaScript files to the page.
          drupal_add_js( 'https://maps.googleapis.com/maps/api/js?v=3.exp', 'external' );
          // Adds the country JavaScript file to the page.
          drupal_add_js( drupal_get_path( 'module', 'country' ) . '/js/map.js' );
          drupal_add_js(
              array(
                  'map' => array(
                      'latitude'  => $wrapper->field_latitude->value(),
                      'longitude' => $wrapper->field_longitude->value(),
                      'zoom'      => $wrapper->field_zoom->value(),
                      'sites' => $js_sites,
                  )
              ),
              array( 'type' => 'setting' )
          );
        }
        $view_ramsar = country_get_view_country_related_content($node->nid, 'ramsar_sites');
        $view_whc = country_get_view_country_related_content($node->nid, 'whc_sites');
        $tabs = array(
          'tab-map' => array(
            'title' => t('Map of sites'), 'active' => TRUE,
            'content' => '<div id="map-canvas" style="height: 400px;margin: 0;padding: 0"></div>'
          ),
          'tab-ramsar' => array(
            'title' => t('Ramsar sites <span class="badge">!count</span>', array('!count' => $view_ramsar->total_rows)),
            'content' => $view_ramsar->render(),
            'active' => !($has_map),
          ),
          'tab-whc' => array(
            'title' => t('WHC sites <span class="badge">!count</span>', array('!count' => $view_whc->total_rows)),
            'content' => $view_whc->render()
          )
        );
        if (!$has_map) {
          unset($tabs['tab-map']);
        }
        $node->content['context'] = array(
          array('#type' => 'item', '#weight' => 10, '#markup' => _country_bs_tabs($tabs))
        );
        break;

      case 'national-reports':
        // $view = country_get_view_country_related_content($node->nid, 'embed_national_reports');
        module_load_include('inc', 'country_deliverable', 'country_deliverable.api');
        $rows = get_national_reports_by_treaty($node->nid);
        $html = '<div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">';
        foreach ($rows as $id => $row) {
          $table = '<table class="table"><tr><th>Report title</th><th>Submission date</th><th>Files</th></tr>';
          foreach ($row->national_reports as $report) {
            $rw = entity_metadata_wrapper('node', $report);
            $date = format_date($rw->field_report_submission_date->value(), 'short');
            $files = $rw->field_files->value();
            $files_html = '';
            foreach ($files as $file) {
              $files_html .= sprintf('<a href="%s" target="_blank">%s</a>', file_create_url($file['uri']), $file['filename']);
            }
            $table .= <<<EOD
              <tr>
                <td>{$report->title}</td>
                <td>{$date}</td>
                <td>{$files_html}</td>
              </tr>
EOD;
          }
          $table .= '</table>';

          $fragment = <<<EOD
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="heading-{$id}">
              <h4 class="panel-title">
                <a data-toggle="collapse" data-parent="#accordion" href="#collapse-{$id}" aria-expanded="true" aria-controls="collapse-{$id}">{$row->title}</a>
              </h4>
            </div>
            <div id="collapse-{$id}" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading-{$id}">
              <div class="panel-body">{$table}</div>
            </div>
          </div>
EOD;
          $html .= $fragment;
        }
        $html .= '</div>';
        $node->content['context'] = array(
          '#type' => 'item', '#weight' => 10, '#markup' => $html,
        );
        break;

      case 'action-plans':
        // $view = country_get_view_country_related_content($node->nid, 'embed_action_plans');
        module_load_include('inc', 'country_deliverable', 'country_deliverable.api');
        $rows = get_action_plans_by_treaty($node->nid);
        $html = '<div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">';
        foreach ($rows as $id => $row) {
          $table = '<table class="table"><tr><th>Title</th><th>Submission date</th><th>Files</th></tr>';
          foreach ($row->action_plans as $report) {
            $rw = entity_metadata_wrapper('node', $report);
            $date = format_date($rw->field_report_submission_date->value(), 'short');
            $files = $rw->field_files->value();
            $files_html = '';
            foreach ($files as $file) {
              $files_html .= sprintf('<a href="%s" target="_blank">%s</a>', file_create_url($file['uri']), $file['filename']);
            }
            $table .= <<<EOD
              <tr>
                <td>{$report->title}</td>
                <td>{$date}</td>
                <td>{$files_html}</td>
              </tr>
EOD;
          }
          $table .= '</table>';

          $fragment = <<<EOD
          <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="heading-{$id}">
              <h4 class="panel-title">
                <a data-toggle="collapse" data-parent="#accordion" href="#collapse-{$id}" aria-expanded="true" aria-controls="collapse-{$id}">{$row->title}</a>
              </h4>
            </div>
            <div id="collapse-{$id}" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading-{$id}">
              <div class="panel-body">{$table}</div>
            </div>
          </div>
EOD;
          $html .= $fragment;
        }
        $html .= '</div>';
        $node->content['context'] = array(
          '#type' => 'item', '#weight' => 10, '#markup' => $html,
        );
        break;

      case 'court-decisions':
        $view = country_get_view_country_related_content($node->nid, 'page_court_decisions');
        $raw_data = country_get_court_decisions_statistics($node->nid);
        $data = array();
        foreach($raw_data as $t) {
          $data[] = (object) array('the_category' => $t->name, 'the_value' =>(int) $t->count);
        }
        $chart_config = edw_amcharts_default_config_chart_column();
        $chart_config->rotate = TRUE;
        $chart_config->dataProvider = $data;
        edw_amcharts_add_chart('country_decisions_chart', 'column', $chart_config, array(), array('width' => '850px', 'height' => '300px'));
        $node->content['context'] = array(
          0 => array(
            '#type' => 'item', '#weight' => 1, '#markup' => '',
            '#id' => 'country_decisions_chart',
          ),
          1 => array(
            '#type' => 'item', '#weight' => 10, '#markup' => $view->render(),
          )
        );
        break;

      case 'legislation':
        module_load_include('inc', 'country', 'country.forms');
        $raw_data = country_get_legislation_statistics($node->nid);
        $data = array();
        foreach($raw_data as $t) {
          $data[] = (object) array(
            'nid' => $node->nid,
            'the_title' => $t->name,
            'the_value' => (int)$t->count,
            'tid' => $t->tid
          );
        }
        $chart_config = edw_amcharts_default_config_chart_pie();
        $chart_config->theme = 'light';
        $chart_config->dataProvider = $data;

        $listeners = array(
          'clickSlice' => <<<EOF
function (event) {
  var params = {
    f: [
      'field_country:' + event.dataItem.dataContext.nid,
      'type:legislation',
      'field_type_of_text:' + event.dataItem.dataContext.tid
    ],
    search_api_views_fulltext_op: 'AND'
  };

  window.location.href = Drupal.settings.basePath + 'search?' + $.param(params);
}
EOF
        );

        edw_amcharts_add_chart('country_legislation_chart', 'pie', $chart_config, $listeners, array('width' => '260px', 'height' => '260px'));
        $filter_form = drupal_get_form('country_legislation_filter_form', $node);
        // Unset form attributes to make keyword filter work.
        unset($filter_form['form_id']);
        unset($filter_form['form_token']);
        unset($filter_form['form_build_id']);
        $node->content['context'] = array(
          0 => array(
            '#type' => 'item', '#weight' => 10, '#markup' => '',
            '#prefix' => '<p></p><h4>Types of legislation</h4>', '#suffix' => '</div>',
            '#id' => 'country_legislation_chart',
          ),
          1 =>$filter_form
        );
        break;

      case 'literature':
        module_load_include('inc', 'country', 'country.forms');
        $raw_data = country_get_court_literature_statistics($node->nid);
        $data = array();
        foreach($raw_data as $t) {
          $data[] = (object) array(
            'nid' => $node->nid,
            'the_category' => $t->name,
            'the_value' => (int) $t->count,
            'tid' => $t->tid
          );
        }
        $chart_config = edw_amcharts_default_config_chart_column();
        $chart_config->rotate = TRUE;
        $chart_config->dataProvider = $data;

        $listeners = array(
          'clickGraphItem' => <<<EOF
function (event) {
  var params = {
    f: [
      'field_country:' + event.item.dataContext.nid,
      'type:literature',
      'field_literature_type:' + event.item.dataContext.tid
    ],
    search_api_views_fulltext_op: 'AND'
  };

  window.location.href = Drupal.settings.basePath + 'search?' + $.param(params);
}
EOF
        );

        edw_amcharts_add_chart('country_literature_chart', 'column', $chart_config, $listeners, array('width' => '800px', 'height' => '350px'));
        $filter_form = drupal_get_form('country_literature_filter_form', $node);
        // Unset form attributes to make keyword filter work.
        unset($filter_form['form_id']);
        unset($filter_form['form_token']);
        unset($filter_form['form_build_id']);
        $node->content['context'] = array(
          0 => array(
            '#type' => 'item', '#weight' => 10, '#markup' => '',
            '#id' => 'country_literature_chart',
          ),
          1 => $filter_form,
        );
        break;

      case 'parties':
        $rows = array();
        $parties = country_get_parties($node->nid);

        foreach ($parties as $party) {
          $wrapper = entity_metadata_wrapper('node', $party);
          $treaty = $wrapper->field_treaty->value()[0];
          $date1 = $wrapper->field_party_date_1->value();
          $date1 = empty($date1) ? '&nbsp;' : format_date($date1, 'short');
          $date2 = $wrapper->field_party_date_1->value();
          $date2 = empty($date2) ? '&nbsp;' : format_date($date2, 'short');

          $row = array(
            'data' => array(
              $wrapper->field_treaty->label(),
              array('data' => $date1, 'class' => 'text-center'),
              array('data' => $date2, 'class' => 'text-center')
            )
          );

          $nfps = country_get_treaty_focal_points($node->nid, $treaty->nid);

          if (count($nfps)) {
            $row['data'][] = array(
              'data' => sprintf('<a data-toggle="collapse" href="#nfp-%1$s" aria-expanded="false" aria-controls="nfp-%1$s"><i class="glyphicon glyphicon-user"></i></a>', $treaty->nid),
              'class' => 'text-center'
            );
          } else {
            $row['data'][] = '';
          }

          $rows[] = $row;

          if (count($nfps)) {
            $nfp_data = '<ul class="list-group">';

            foreach ($nfps as $nfp) {
              $nfp_wrapper = entity_metadata_wrapper('node', $nfp);
              $nfp_data .= '<li class="list-group-item">';
              $nfp_data .= sprintf('<h4 class="list-group-item-heading"><span class="glyphicon glyphicon-user"></span> %s</h4>', $nfp_wrapper->title->value());
              $nfp_data .= '<dl class="dl-horizontal">';
              $nfp_data .= sprintf('<dt>%s</dt><dd>%s</dd>', t('Position'), $nfp_wrapper->field_person_position->value());
              $nfp_data .= sprintf('<dt>%s</dt><dd>%s</dd>', t('Department'), $nfp_wrapper->field_person_department->value());
              $nfp_data .= sprintf('<dt>%s</dt><dd>%s</dd>', t('Institution'), $nfp_wrapper->field_person_institution->value());
              $nfp_data .= sprintf('<dt>%s</dt><dd>%s</dd>', t('Address'), $nfp_wrapper->field_address->value());
              $nfp_data .= sprintf('<dt>%s</dt><dd>%s</dd>', t('Fax'), $nfp_wrapper->field_contact_fax->value());
              $nfp_data .= '</dl>';
              $nfp_data .= '</li>';
            }

            $nfp_data .= '</ul>';

            $row = array(
              'class' => array('collapse'),
              'data' => array(array('data' => $nfp_data, 'colspan' => 4)),
              'id' => array('nfp-' . $treaty->nid)
            );

            $rows[] = $row;
          }
        }

        $table = array(
          'attributes' => array('id' => 'table-parties', 'class' => 'table-no-striping table-hover'),
          'header' => array(
            t('Treaty'),
            array('data' => t('Signature'), 'class' => array('text-center')),
            array('data' => t('Ratification'), 'class' => array('text-center')),
            array('data' => t('Focal points'), 'class' => array('text-center'))
          ),
          'rows' => $rows
        );

        $node->content['context'] = array(
          '#type' => 'item', '#weight' => 10, '#markup' => theme('table', $table)
        );

        break;
    }
  }
}

/**
 * Implements hook_page_alter().
 */
function country_page_alter(&$page) {
  if (!empty($page['content']['system_main']['nodes'])) {
    foreach ($page['content']['system_main']['nodes'] as $nid => &$node) {
      // Move legislation chart to secondary region
      if (isset($node['#node']->context) && $node['#node']->type == 'country') {
        if (isset( $node['context'] ) && is_array($node['context'])) {
          foreach ($node['context'] as $idx => $item) {
            if (isset( $item['#id'] ) && $item['#id'] == 'country_legislation_chart') {
              $page['sidebar_second'][] = $item;
              unset( $node['context'][0] );
            }
          }
        }
        // Hide fields in some view modes.
        switch ($node['#node']->context) {
          case 'action-plans':
          case 'court-decisions':
          case 'legislation':
          case 'literature':
          case 'map':
          case 'national-reports':
          case 'parties':
            foreach(element_children($node) as $element_id) {
              hide($node[$element_id]);
            }
            show($node['context']);
          }
      }
    }
  }
}

function country_country_contextual_menu_alter(&$contextual_menu, $node) {
  $ret = array();
  if ($node->type == 'country') {
    $uri = url(drupal_get_path_alias('node/' . $node->nid), array('absolute' => TRUE));

    $view_ramsar = country_get_view_country_related_content($node->nid, 'ramsar_sites');
    $view_whc = country_get_view_country_related_content($node->nid, 'whc_sites');
    $links = array(
      'map' => t('Map and sites <span class="badge">!count</span>',
        array('!count' => $view_ramsar->total_rows + $view_whc->total_rows)
      ),
      'parties' => t('Membership <span class="badge">!count</span>',
          array('!count' => count(country_get_parties($node->nid)))
      ),
      'action-plans' => t('Action plans <span class="badge">!count</span>',
        array('!count' => country_get_view_country_related_content_count($node->nid, 'embed_action_plans'))
      ),
      'national-reports' => t('National reports <span class="badge">!count</span>',
        array('!count' => country_get_view_country_related_content_count($node->nid, 'embed_national_reports'))
      ),
      'legislation' => t('Legislation <span class="badge">!count</span>',
        array('!count' => country_get_view_country_related_content_count($node->nid, 'page_legislation'))
      ),
      'literature' => t('Literature <span class="badge">!count</span>',
        array('!count' => country_get_view_country_related_content_count($node->nid, 'page_literature'))
      ),
      'court-decisions' => t('Court decisions <span class="badge">!count</span>',
        array('!count' => country_get_view_country_related_content_count($node->nid, 'page_court_decisions'))
      ),
    );

    foreach($links as $path => $title) {
      $link = array(
        '#type' => 'link',
        '#title' => $title,
        '#href' => $uri . '/' . $path,
        '#attributes' => array( 'class' => array( 'list-group-item' ) ),
        '#options' => array( 'html' => TRUE ),
        '#active' => FALSE,
      );
      if (isset($node->context) && $node->context == $path) {
        $link['#attributes']['class'][] = 'active';
      }
      $contextual_menu[] = $link;
    }

    // Downloads menu item
    $contextual_menu[] = array(
      '#type' => 'link',
      '#title' => t('Downloads'),
      '#href' => '',
      '#attributes' => array('class' => 'list-group-item'),
      '#options' => array('attributes' => array('data-toggle' => 'modal'), 'external' => TRUE, 'fragment' => 'modal-downloads', 'html' => TRUE),
      '#active' => FALSE,
    );
  }
  return $ret;
}


function country_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  if (isset($router_item['page_arguments'][0]->type) && $router_item['page_arguments'][0]->type == 'country') {
    $context_menu = array();
    $node = $router_item['page_arguments'][0];
    drupal_alter('country_contextual_menu', $context_menu, $node);
    $data['tabs'][1] = array(
      'count' => count($context_menu),
      'output' => $context_menu,
    );
  }
}
