<?php
/**
 * @file
 * Code for the treaty feature.
 */

include_once 'treaty.features.inc';

/**
 * Defines menu items and page callbacks.
 *
 * @return
 *   An associative array of properties for each path.
 */
function treaty_menu() {
  $items['terms'] = array(
    'title' => t('Glossary'),
    'page callback' => 'terms_view',
    'access arguments' => array('access content')
  );

  return $items;
}

/**
 *  Implements hook_url_inbound_alter().
 */
function treaty_url_inbound_alter(&$path, $original_path, $path_language) {
  module_load_include('inc', 'treaty', 'treaty.api');
  if($node = treaty_url_match_node($path)) {
    $path = 'node/' . $node->nid;
  }
}

/**
 * Implement hook_theme().
 *
 * {@inheritdoc}
 */
function treaty_theme() {
  return array(
    'treaty_text' => array(
      'render element' => 'element',
      'template' => 'templates/treaty-text',
      'variables' => array('articles'),
      'path' => drupal_get_path('module', 'treaty'),
    ),
    'treaty_text_article' => array(
      'render element' => 'element',
      'template' => 'templates/treaty-text-article',
      'variables' => array('article'),
      'path' => drupal_get_path('module', 'treaty'),
    ),
    'treaty_text_paragraph' => array(
      'render element' => 'element',
      'template' => 'templates/treaty-text-paragraph',
      'variables' => array('paragraph', 'article'),
      'path' => drupal_get_path('module', 'treaty'),
    ),
    'treaty_text_tags' => array(
      'render element' => 'element',
      'template' => 'templates/treaty-text-tags',
      'variables' => array('tags'),
      'path' => drupal_get_path('module', 'treaty'),
    ),
    'treaty_decisions' => array(
      'render element' => 'element',
      'template' => 'templates/treaty-decisions',
      'variables' => array('decisions'),
      'path' => drupal_get_path('module', 'treaty'),
    ),
  );
}

/**
 * Implements hook_node_view().
 */
function treaty_node_view($node, $view_mode, $langcode) {
  if($node->type == 'treaty' && $view_mode == 'full') {
    // Adds the country JavaScript file to the page.
    drupal_add_js(drupal_get_path('module', 'treaty') . '/js/treaty.js');
    $context = treaty_url_context(request_path());
    if (empty($context)) {
      $context = 'text';
    }
    // $wrapper = entity_metadata_wrapper('node', $node);
    // $is_ecolex = $wrapper-> ...
    $node->context = $context;
    $node->content['context'] = array(
      '#type' => 'item', '#weight' => 10, '#markup' => '<b>Hello world</b>'
    );
    switch ($context) {
      case 'summary':
        break;

      case 'text':
        drupal_add_library('informea', 'smallipop');
        drupal_add_css(drupal_get_path('module', 'treaty') . '/styles/treaty.css');
        $articles = treaty_get_treaty_text($node->nid);
        $node->content['context'] = array(
          '#type' => 'item', '#weight' => 10, '#markup' => theme('treaty_text', array('articles' => $articles)),
        );
        break;

      case 'protocols':
        break;

      case 'decisions':
        module_load_include('inc', 'decision', 'decision.api');
        $data = decision_get_treaty_decisions_group_by_meeting($node->nid);
        $elements = array();
        foreach ($data as $id => $row) {
          $rw = entity_metadata_wrapper('node', $row);
          $elements[$id] = array(
            'header' => sprintf('%s <div><small class="muted">%s</small></div>', $rw->label(), treaty_format_meeting_description($row)),
            'body' => theme('treaty_decisions', array('decisions' => $row->decisions)),
          );
        }
        $node->content['context'] = array(
          '#type' => 'item', '#weight' => 10, '#markup' => theme('informea_bootstrap_collapse', array('id' => 'decisions', 'elements' => $elements)),
        );
        break;

      case 'parties':
        module_load_include('inc', 'country_data', 'country_data.api');
        module_load_include('php', 'informea', 'recaptcha/recaptchalib');
        $rows = array();
        $members = country_data_treaty_get_membership($node->nid);
        foreach ($members as $member) {
          $wrapper = entity_metadata_wrapper('node', $member);
          $country = $wrapper->field_country->value()[0];
          $date1 = $wrapper->field_party_date_1->value();
          $date1 = empty($date1) ? '&nbsp;' : format_date($date1, 'short');
          $date2 = $wrapper->field_party_date_2->value();
          $date2 = empty($date2) ? '&nbsp;' : format_date($date2, 'short');
          $row = array(
            'data' => array(
              $wrapper->field_country->label(),
              array('data' => $date1, 'class' => 'text-center'),
              array('data' => $date2, 'class' => 'text-center')
            )
          );
          $nfps = country_data_get_treaty_focal_points($country->nid, $node->nid);
          if (count($nfps)) {
            $row['data'][] = array(
              'data' => sprintf('<a data-toggle="collapse" href="#nfp-%1$s" aria-expanded="false" aria-controls="nfp-%1$s"><i class="glyphicon glyphicon-user"></i></a>', $country->nid),
              'class' => 'text-center'
            );
          } else {
            $row['data'][] = '';
          }
          $rows[] = $row;
          if (count($nfps)) {
            $nfp_data = country_data_render_focal_points($nfps);
            $row = array(
              'class' => array('collapse'),
              'data' => array(array('data' => drupal_render($nfp_data), 'colspan' => 4)),
              'id' => array('nfp-' . $country->nid)
            );
            $rows[] = $row;
          }
        }
        $table = array(
          'attributes' => array('id' => 'table-parties', 'class' => 'table-no-striping table-hover'),
          'header' => array(
            t('Treaty'),
            array('data' => t('Signature'), 'class' => array('text-center')),
            array('data' => t('Ratification'), 'class' => array('text-center')),
            array('data' => t('Focal points'), 'class' => array('text-center'))
          ),
          'rows' => $rows
        );
        $node->content['context'] = array(
          '#type' => 'item', '#weight' => 10, '#markup' => theme('table', $table)
        );
        break;

      case 'national-reports':
        module_load_include('inc', 'country_deliverable', 'country_deliverable.api');
        $rows = country_deliverable_national_reports_group_by_country($node->nid);
        $node->content['context'] = country_deliverable_render_reports($rows, 'national_reports');
        break;

      case 'action-plans':
        module_load_include('inc', 'country_deliverable', 'country_deliverable.api');
        $rows = country_deliverable_action_plans_group_by_country($node->nid);
        $node->content['context'] = country_deliverable_render_reports($rows, 'action_plans');
        break;
    }
  }
}

/**
 * Implements hook_page_alter().
 */
function treaty_page_alter(&$page) {
  if (!empty($page['content']['system_main']['nodes'])) {
    foreach ($page['content']['system_main']['nodes'] as $nid => &$node) {
      // Move legislation chart to secondary region
      if (isset($node['#node']->context) && $node['#node']->type == 'treaty') {
        // Hide fields in some view modes.
        foreach(element_children($node) as $element_id) {
          hide($node[$element_id]);
        }
        switch ($node['#node']->context) {
          case 'summary':
          case 'text':
          case 'protocols':
          case 'decisions':
          case 'parties':
          case 'reports':
          case 'plans':
            show($node['context']);
        }
      }
    }
  }
}

function treaty_treaty_contextual_menu_alter(&$contextual_menu, $node) {
  $ret = array();
  if ($node->type == 'treaty') {
    module_load_include('inc', 'country_deliverable', 'country_deliverable.api');
    module_load_include('inc', 'country_data', 'country_data.api');
    module_load_include('inc', 'decision', 'decision.api');
    module_load_include('inc', 'treaty', 'treaty.api');
    $uri = url(drupal_get_path_alias('node/' . $node->nid), array('absolute' => TRUE));
    $links = array(
      'summary' => t('Summary'),
      'protocols' => t('Protocols <span class="badge">!count</span>',
        array('!count' => count(treaty_get_child_protocols($node->nid)))
      ),
      'text' => t('Treaty text'),
      'decisions' => t('Decisions <span class="badge">!count</span>',
        array('!count' => decision_count_treaty_decisions($node->nid))
      ),
      'parties' => t('Parties <span class="badge">!count</span>',
        array('!count' => count(country_data_treaty_get_membership($node->nid)))
      ),
      'national-reports' => t('National reports <span class="badge">!count</span>',
        array('!count' => country_deliverable_count_treaty_national_reports($node->nid))
      ),
      'action-plans' => t('National plans <span class="badge">!count</span>',
        array('!count' => country_deliverable_count_treaty_action_plans($node->nid))
      ),
    );

    foreach($links as $path => $title) {
      $link = array(
        '#type' => 'link',
        '#title' => $title,
        '#href' => $uri . '/' . $path,
        '#attributes' => array( 'class' => array( 'list-group-item' ) ),
        '#options' => array( 'html' => TRUE ),
        '#active' => FALSE,
      );
      if (isset($node->context) && $node->context == $path) {
        $link['#attributes']['class'][] = 'active';
      }
      $contextual_menu[] = $link;
    }

    // Downloads menu item
    $contextual_menu[] = array(
      '#type' => 'link',
      '#title' => t('Downloads'),
      '#href' => '',
      '#attributes' => array('class' => 'list-group-item'),
      '#options' => array('attributes' => array('data-toggle' => 'modal'), 'external' => TRUE, 'fragment' => 'modal-downloads', 'html' => TRUE),
      '#active' => FALSE,
    );
  }
  return $ret;
}

function treaty_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  if (isset($router_item['page_arguments'][0]->type) && $router_item['page_arguments'][0]->type == 'treaty') {
    $context_menu = array();
    $node = $router_item['page_arguments'][0];
    drupal_alter('treaty_contextual_menu', $context_menu, $node);
    $data['tabs'][1] = array(
      'count' => count($context_menu),
      'output' => $context_menu,
    );
  }
}

/**
 * Displays the glossary page when the user visits the path.
 *
 * @return string
 *   String representing the content of the page.
 */
function terms_view() {
  // Adds the terms JavaScript file to the page.
  drupal_add_js(drupal_get_path('module', 'treaty') . '/js/terms.js');

  return theme('terms');
}
