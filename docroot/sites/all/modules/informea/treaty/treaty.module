<?php
/**
 * @file
 * Code for the treaty feature.
 */

include_once 'treaty.features.inc';

/**
 * Defines menu items and page callbacks.
 *
 * @return
 *   An associative array of properties for each path.
 */
function treaty_menu() {
  $items['terms'] = array(
    'title' => t('Glossary'),
    'page callback' => 'terms_view',
    'access arguments' => array('access content')
  );

  return $items;
}

/**
 *  Implements hook_url_inbound_alter().
 */
function treaty_url_inbound_alter(&$path, $original_path, $path_language) {
  if($node = treaty_url_match_node($path)) {
    $path = 'node/' . $node->nid;
  }
}

function treaty_url_match_node($path) {
  module_load_include('inc', 'treaty', 'treaty.api');
  if (arg(0, $path) == 'treaties') {
    if ($node = treaty_load_by_odata_name(arg(1, $path))) {
      return $node;
    }
  } else if(strlen(arg(0, $path)) == 2) { // Assume language prefix @todo enhance
    if (arg(1, $path) == 'treaties') {
      if ($node = treaty_load_by_odata_name(arg(2, $path))) {
        return $node;
      }
    }
  }
  return FALSE;
}

/**
 * Implements hook_node_view().
 */
function treaty_node_view($node, $view_mode, $langcode) {
  if($node->type == 'treaty' && $view_mode == 'full') {
    // Adds the country JavaScript file to the page.
    drupal_add_js(drupal_get_path('module', 'treaty') . '/js/treaty.js');
    $context = treaty_url_context(request_path());
    if (empty($context)) {
      $context = 'text';
    }
    // $wrapper = entity_metadata_wrapper('node', $node);
    // $is_ecolex = $wrapper-> ...
    $node->context = $context;
    $node->content['context'] = array(
      '#type' => 'item', '#weight' => 10, '#markup' => '<b>Hello world</b>'
    );
    switch ($context) {
      case 'summary':
        break;

      case 'text':
        break;

      case 'protocols':
        break;

      case 'decisions':
        break;

      case 'parties':
        break;

      case 'reports':
        break;

      case 'plans':
        break;
    }
  }
}

/**
 * Implements hook_page_alter().
 */
function treaty_page_alter(&$page) {
  if (!empty($page['content']['system_main']['nodes'])) {
    foreach ($page['content']['system_main']['nodes'] as $nid => &$node) {
      // Move legislation chart to secondary region
      if (isset($node['#node']->context) && $node['#node']->type == 'treaty') {
        // Hide fields in some view modes.
        foreach(element_children($node) as $element_id) {
          hide($node[$element_id]);
        }
        switch ($node['#node']->context) {
          case 'summary':
          case 'text':
          case 'protocols':
          case 'decisions':
          case 'parties':
          case 'reports':
          case 'plans':
            show($node['context']);
        }
      }
    }
  }
}

function treaty_treaty_contextual_menu_alter(&$contextual_menu, $node) {
  $ret = array();
  if ($node->type == 'treaty') {
    module_load_include('inc', 'country_deliverable', 'country_deliverable.api');
    module_load_include('inc', 'country_data', 'country_data.api');
    module_load_include('inc', 'decision', 'decision.api');
    module_load_include('inc', 'treaty', 'treaty.api');
    $uri = url(drupal_get_path_alias('node/' . $node->nid), array('absolute' => TRUE));
    $links = array(
      'summary' => t('Summary'),
      'protocols' => t('Protocols <span class="badge">!count</span>',
        array('!count' => count(treaty_get_child_protocols($node->nid)))
      ),
      'text' => t('Treaty text'),
      'decisions' => t('Decisions <span class="badge">!count</span>',
        array('!count' => decision_count_treaty_decisions($node->nid))
      ),
      'parties' => t('Parties <span class="badge">!count</span>',
        array('!count' => count(country_data_treaty_get_membership($node->nid)))
      ),
      'reports' => t('National reports <span class="badge">!count</span>',
        array('!count' => country_deliverable_count_treaty_national_reports($node->nid))
      ),
      'plans' => t('National plans <span class="badge">!count</span>',
        array('!count' => country_deliverable_count_treaty_action_plans($node->nid))
      ),
    );

    foreach($links as $path => $title) {
      $link = array(
        '#type' => 'link',
        '#title' => $title,
        '#href' => $uri . '/' . $path,
        '#attributes' => array( 'class' => array( 'list-group-item' ) ),
        '#options' => array( 'html' => TRUE ),
        '#active' => FALSE,
      );
      if (isset($node->context) && $node->context == $path) {
        $link['#attributes']['class'][] = 'active';
      }
      $contextual_menu[] = $link;
    }

    // Downloads menu item
    $contextual_menu[] = array(
      '#type' => 'link',
      '#title' => t('Downloads'),
      '#href' => '',
      '#attributes' => array('class' => 'list-group-item'),
      '#options' => array('attributes' => array('data-toggle' => 'modal'), 'external' => TRUE, 'fragment' => 'modal-downloads', 'html' => TRUE),
      '#active' => FALSE,
    );
  }
  return $ret;
}

function treaty_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  if (isset($router_item['page_arguments'][0]->type) && $router_item['page_arguments'][0]->type == 'treaty') {
    $context_menu = array();
    $node = $router_item['page_arguments'][0];
    drupal_alter('treaty_contextual_menu', $context_menu, $node);
    $data['tabs'][1] = array(
      'count' => count($context_menu),
      'output' => $context_menu,
    );
  }
}

/**
 * Displays the glossary page when the user visits the path.
 *
 * @return string
 *   String representing the content of the page.
 */
function terms_view() {
  // Adds the terms JavaScript file to the page.
  drupal_add_js(drupal_get_path('module', 'treaty') . '/js/terms.js');

  return theme('terms');
}
