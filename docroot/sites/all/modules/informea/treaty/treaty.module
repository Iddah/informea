<?php
/**
 * @file
 * Code for the treaty feature.
 */

include_once 'treaty.features.inc';

/**
 * Defines menu items and page callbacks.
 *
 * @return
 *   An associative array of properties for each path.
 */
function treaty_menu() {
  $items['treaties'] = array(
    'title' => t('Treaties'),
    'page callback' => 'treaty_view',
    'access arguments' => array('access content')
  );

  return $items;
}

/**
 * Registers module's theme implementations.
 *
 * @return
 *   An associative array of theme hook information.
 */
function treaty_theme() {
  return array(
    'treaties' => array(
      'variables' => array(
        'regions' => NULL,
        'treaties' => NULL
      )
    )
  );
}

function _treaty_get_regions() {
  global $language;

  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'taxonomy_term')
    ->entityCondition('bundle', 'geographical_region')
    ->propertyOrderBy('weight');

  $result = $query->execute();
  $tids = array_keys($result['taxonomy_term']);
  $terms = entity_load('taxonomy_term', $tids);
  $regions = array();

  foreach ($terms as $term) {
    $regions[] = (object) array(
      'tid' => $term->tid,
      'name' => $term->name_field[$language->language][0]['safe_value']
    );
  }

  return $regions;
}

/**
 * Displays the treaties page when the user visits the path.
 *
 * @return
 *   String representing the content of the page.
 */
function treaty_view() {
  return theme('treaties');
}
