<?php
/**
 * @file
 * Code for the Search V2 feature.
 */

include_once 'search_v2.features.inc';

/**
 * Implements hook_entity_info_alter().
 */
function search_v2_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['search_item'] = [
    'label' => t('Search item'),
    'custom settings' => TRUE,
  ];
}

function search_v2_theme() {
  return [
    'informea_node_metadata' => [
      'template' => 'informea_node_metadata',
      'variables' => [
        'meta' => [],
      ],
      'path' => drupal_get_path('module', 'search_v2') . '/templates',
    ],
  ];
}

/**
 * Implements hook_facet_items_alter().
 */
function search_v2_facet_items_alter(&$build, &$settings) {
  switch ($settings->name) {
    case 'search_api@default_index:block:field_region':
    case 'search_api@default_index:block:field_mea_topic':
      $text = $settings->facet == 'field_region' ? t('All Regions') : t('All Topics');
      $select_all = [
        '#html' => TRUE,
        '#active' => TRUE,
        '#markup' => sprintf('%s <span class="item-label">%s</span>', t('In'), $text),
        '#query' => ['f' => []],
        '#count' => NULL,
      ];
      foreach ($build as &$item) {
        $item['#html'] = TRUE;
        $item['#markup'] = sprintf('%s <span class="item-label">%s</span>', t('only in'), $item['#markup']);

        $select_all['#path'] = $item['#path'];
        if (!empty($item['#active'])) {
          $select_all['#active'] = FALSE;
        }
        if (!empty($item['#query']['f'])) {
          $select_all['#query']['f'] = array_merge($select_all['#query']['f'], $item['#query']['f']);
        }
      }
      if (!empty($select_all['#path'])) {
        // Display "In All Regions" / "In All Topics" option.
        foreach ($select_all['#query']['f'] as $key => $value) {
          if (preg_match('/^' . $settings->facet . ':/', $value)) {
            unset($select_all['#query']['f'][$key]);
          }
        }
        array_unshift($build, $select_all);
      }
      break;
  }
}

/**
 * Implements hook_node_view().
 */
function search_v2_node_view($node, $view_mode, $langcode) {
  if ($view_mode == 'search_item') {
    $view = views_get_current_view();
    $content = &$node->content;
    $left_column = [];
    $meta = [
      'content_type' => node_type_get_name($node),
    ];

    if (!empty($view->result)) {
      foreach ($view->result as $result) {
        if (!empty($result->_entity_properties['nid']) && ($result->_entity_properties['nid'] == $node->nid) && !empty($result->_entity_properties['search_api_excerpt'])) {
          // Provide the excerpt to 'Search Item' view-mode template.
          $content['search_api_excerpt'] = [
            '#markup' => $result->_entity_properties['search_api_excerpt'],
            '#weight' => 50,
          ];
        }
      }
    }

    switch ($node->type) {
      // Move some node fields to the left column or to the metadata container.
      case 'treaty':
        // Move logo to left column.
        if (!empty($content['field_logo'])) {
          $left_column['field_logo'] = $content['field_logo'];
          unset($content['field_logo']);
        }

        $meta['full_treaty_text_link'] = l(t('Full Treaty Text'), 'node/' . $node->nid . '/text');
        $meta['parties_link'] = l(t('Parties'), 'node/' . $node->nid . '/parties');
        if (!empty($content['field_online_course_link']['0']['#element']['title'])) {
          $content['field_online_course_link']['0']['#element']['title'] = t('Related Online Course');
        }
        if (!empty($content['field_treaty_text_url']['0']['#element']['title'])) {
          $content['field_treaty_text_url']['0']['#element']['title'] = t('Link to Original Source');
        }
        $content['field_entry_into_force']['#title'] = t('Date of text');

        foreach (['field_online_course_link', 'field_treaty_text_url', 'field_entry_into_force'] as $field) {
          if (!empty($content[$field])) {
            $meta[$field] = $content[$field];
            unset($content[$field]);
          }
        }
        break;

      case 'action_plan':
      case 'national_report':
        // Move treaty field to left column.
        if (!empty($content['field_treaty'])) {
          $left_column['field_treaty'] = $content['field_treaty'];
          unset($content['field_treaty']);
        }

        // Move files to metadata container.
        if (!empty($content['field_files'])) {
          $meta['field_files'] = $content['field_files'];
          unset($content['field_files']);
        }
        break;

      case 'court_decisions':
        if (!empty($content['field_url']['0']['#element']['title'])) {
          $content['field_url']['0']['#element']['title'] = t('Link to Original Source');
        }

        foreach (['field_url', 'field_files', 'field_sorting_date'] as $field) {
          if (!empty($content[$field])) {
            $meta[$field] = $content[$field];
            unset($content[$field]);
          }
        }
        break;

      case 'legislation':
        $meta['full_text_link'] = l(t('Link to Full Text'), 'node/' . $node->nid);

        // Move files to metadata container.
        if (!empty($content['field_files'])) {
          $meta['field_files'] = $content['field_files'];
          unset($content['field_files']);
        }

        // Move "Date of text" to metadata container.
        if (!empty($content['field_sorting_date'])) {
          $meta['field_sorting_date'] = $content['field_sorting_date'];
          unset($content['field_sorting_date']);
        }
        break;

      case 'event_calendar':
        if (!empty($content['event_calendar_date'])) {
          $left_column['event_calendar_date'] = $content['event_calendar_date'];
          unset($content['event_calendar_date']);
        }
        break;

      case 'feed_item':
        // Move treaty field to left column.
        if (!empty($content['field_treaty'])) {
          $left_column['field_treaty'] = $content['field_treaty'];
          unset($content['field_treaty']);
        }

        $meta['published'] = [
          '#markup' => sprintf('<div class="field field-label-inline"><div class="field-label">%s:</div><div class="field-item">%s</div></div>',
            t('Published'),
            date('j M Y', $node->created)
        )];
        break;

      case 'contact_person':
      case 'decision':
      case 'document':
        // Move treaty field to left column.
        if (!empty($content['field_treaty'])) {
          $left_column['field_treaty'] = $content['field_treaty'];
          unset($content['field_treaty']);
        }
        break;

      case 'country':
        if (!empty($node->field_country_iso2[LANGUAGE_NONE][0]['value'])) {
          $left_column['flag'] = ['#markup' => theme('image', array(
            'path' => drupal_get_path('theme', 'informea_theme') . '/img/flags/flag-' . strtolower($node->field_country_iso2[LANGUAGE_NONE][0]['value']) . '.png',
            'attributes' => array('class' => array('flag', 'flag-medium'))
          ))];
        }
        break;

      case 'goal':
        $wrapper = entity_metadata_wrapper('node', $node);
        $goal_type = $wrapper->field_goal_type->value();
        $goal_source = $wrapper->field_goal_source->value();
        if (!empty($goal_type->name)) {
          $meta['content_type'] = $goal_type->name;
        }

        // Prepend the source and append the summary to title
        if (!empty($goal_source) && is_object($goal_source)) {
          $goal_source_wrapper = entity_metadata_wrapper('taxonomy_term', $goal_source);
          if (!empty($goal_source_wrapper->field_abbreviation->value())) {
            $node->title = $goal_source_wrapper->field_abbreviation->value() . ' ' . $node->title;
          }
        }
        if (!empty($content['field_summary'][0]['#markup'])) {
          $node->title .= ': ' . $content['field_summary'][0]['#markup'];
        }
        unset ($content['field_summary']);

        unset($content['search_api_excerpt']);

        // Move image field to left column.
        if (!empty($content['field_images'])) {
          $left_column['field_images'] = $content['field_images'];
          unset($content['field_images']);
        }
        break;

    }
    $content['left_column'] = $left_column;
    $content['meta'] = [
      '#theme' => 'informea_node_metadata',
      '#meta' => $meta,
      '#weight' => 100,
    ];
  }
}
