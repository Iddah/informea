<?php
/**
 * @file
 * Code for the informea_search feature.
 */

include_once 'informea_search.features.inc';

/**
 * Implements hook_facet_items_alter(&$build, &$settings);
 */
function informea_search_facet_items_alter(&$build, &$settings) {
  if ($settings->facet == "type") {
    $map = [
      t('Action Plan') => t('National Plan'),
      t('Event Calendar') => t('Events'),
      t('Treaty paragraph') => t('Treaty Text'),
      t('Decision Paragraph') => t('Decision Text'),
    ];
    foreach($build as $key => $item) {
      if (isset($map[$item["#markup"]])) {
        $build[$key]["#markup"] = $map[$item["#markup"]];
      } else {
        $build[$key]["#markup"] = ucwords($build[$key]["#markup"]);
      }
    }
  }
}

/**
 * Implements hook_views_pre_render().
 */
function informea_search_views_pre_render(&$view) {
  switch ($view->name) {
    case 'informea_search':
      drupal_add_library('informea', 'smallipop');
      drupal_add_js(drupal_get_path('module', 'informea_search') . '/js/informea_search.js');

      // do not break here
    case 'informea_search_legislation':
    case 'informea_search_court_decision':
    case 'informea_search_publications':
    case 'informea_search_bilateral_treaties':
    case 'informea_search_goals_and_principles':
      $content = '';
      if (@$_GET['search_api_views_fulltext']) {
        $content = sprintf('<div class="results-for">%s: <b>%s</b></div>', t('Results for'), @$_GET['search_api_views_fulltext']);
      }
      $view->attachment_before = $content;
      break;
  }
}

function informea_search_block_info() {
  return array(
    'search_informea' => array(
      'info' => t('InforMEA search box'),
      'cache' => DRUPAL_NO_CACHE,
      'weight' => 10,
      'status' => 1,
      'region' => 'navigation',
      'visibility' => BLOCK_VISIBILITY_NOTLISTED,
      'pages' => '',
    ),
    'search_informea_switch_topic' => array(
      'info' => t('Switch search topic'),
      'cache' => DRUPAL_NO_CACHE,
      'weight' => -50,
      'status' => 1,
      'region' => 'header',
      'visibility' => BLOCK_VISIBILITY_LISTED,
      'pages' => 'search
search/*
search-legislation
search-legislation/*
search-court-decisions
search-court-decisions/*
search-publications
search-publications/*
search-bilateral-treaties
search-bilateral-treaties/*
search-goals-and-principles
search-goals-and-principles/*',
    )
  );
}

/**
 * Implements hook_block_view().
 */
function informea_search_block_view($delta = '') {
  $block = array();
  switch($delta) {
    case 'search_informea':
      $form = drupal_get_form('informea_search_form');
      unset($form['form_id']);
      unset($form['form_build_id']);
      $block['content'] = $form;
      break;
    case 'search_informea_switch_topic':
      $block['content'] = informea_search_block_switch_topic_view();
  }
  return $block;
}

/**
 * Implements hook_search_api_views_query_alter().
 */
function informea_search_search_api_views_query_alter(view &$view, SearchApiViewsQuery &$query) {
  if ($view->name == 'informea_search') {
    $multilateral_treaties = _informea_search_get_treaties_by_data_source(DATA_SOURCE_ECOLEX, true);
    if (empty($multilateral_treaties)) {
      $multilateral_treaties = [-1];
    }
    $group = $query->set_where_group('OR');
    foreach ($multilateral_treaties as $multilateral_treaty) {
      // @todo: SearchApiViewsQuery does not support operator "IN"?!?!
      $query->condition('nid', $multilateral_treaty, '=', $group);
      $query->condition('field_treaty', $multilateral_treaty, '=', $group);
    }
  }
}

function informea_search_search_api_solr_query_alter(array &$call_args, SearchApiQueryInterface $query) {
  $pos = array_search('{!tag=facet:type}ss_type:"all_treaty"', $call_args['params']['fq']);
  if ($pos !== FALSE) {
    $call_args['params']['fq'][$pos] = '{!tag=facet:type}((ss_type:"treaty_article") OR (ss_type:"treaty_paragraph"))';
  }
  $pos = array_search('{!tag=facet:type}ss_type:"all_decision"', $call_args['params']['fq']);
  if ($pos !== FALSE) {
    $call_args['params']['fq'][$pos] = '{!tag=facet:type}((ss_type:"decision") OR (ss_type:"decision_paragraph"))';
  }
}

function _informea_search_get_treaties_by_data_source($source_tid, $negate_condition = false) {
  $query = db_select('node', 'n');
  $query->leftJoin('field_data_field_data_source', 'ds', 'n.nid = ds.entity_id');
  $query->fields('n', ['nid']);
  $query->condition('n.type', 'treaty');
  if ($negate_condition == true) {
    $or = db_or();
    $or->condition('ds.field_data_source_tid', $source_tid, '!=');
    $or->isNull('ds.field_data_source_tid');
    $query->condition($or);
  }
  else {
    $query->condition('ds.field_data_source_tid', $source_tid, '=');
  }
  return $query->execute()->fetchCol();
}

/**
* Implementation of hook_menu().
*/
function informea_search_menu() {
  $items['ajax/search/%'] = array(
    'page callback' => 'informea_search_ajax_get_ajax',
    'page arguments' => array(2),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
    'delivery callback' => 'informea_search_ajax_callback',
  );
  $items['external-search'] = array(
    'page callback' => 'informea_search_external_search',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  $items['prepare-search'] = array(
    'page callback' => 'informea_search_prepare_search',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );

  return $items;
}

function informea_search_ajax_get_ajax_treaties($term, &$data) {
  $condition = db_or()
    ->condition('n.title', '%' . $term . '%', 'like')
    ->condition('fa.field_title_abbreviation_value', '%' . $term . '%', 'like')
    ->condition('fn.field_official_name_value', '%' . $term . '%', 'like');

  $query = db_select('node', 'n')
    ->condition('n.type', 'treaty')
    ->condition('n.status', NODE_PUBLISHED)
    ->fields('n', array('nid'));

  $query->leftJoin('field_data_field_title_abbreviation', 'fa', 'fa.entity_id = n.nid');
  $query->leftJoin('field_data_field_official_name', 'fn', 'fn.entity_id = n.nid');

  $query->condition($condition)
    ->range(0, 5);

  $result = $query->execute()->fetchAllKeyed();

  if (!empty($result)) {
    $nids = array_keys($result);
    $nodes = entity_load('node', $nids);

    foreach ($nodes as $node) {
      $wrapper = entity_metadata_wrapper('node', $node);

      $img = treaty_url_logo($node);
      $label = $wrapper->label();
      if (!empty($img)) {
        $label = $img . ' ' . $label;
      }

      $data[] = array(
        'category' => t('Treaties'),
        'label' => $label,
        'link' => url('node/' . $wrapper->getIdentifier()),
        'value' => $wrapper->label()
      );
    }
  }
}

function informea_search_ajax_get_ajax_countries($term, &$data) {
  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'country')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('title_field', 'value', '%' . $term . '%', 'like')
    ->range(0, 5);

  $result = $query->execute();

  if (isset($result['node'])) {
    $nids = array_keys($result['node']);
    $nodes = entity_load('node', $nids);

    foreach ($nodes as $node) {
      $wrapper = entity_metadata_wrapper('node', $node);

      $iso2 = strtolower($wrapper->field_country_iso2->value());
      $img = theme('image', array('path' => drupal_get_path('theme', 'informea_theme') . '/img/flags/flag-' . $iso2 . '.png'));

      $data[] = array(
        'category' => t('Countries'),
        'label' => $img . ' ' . $wrapper->label(),
        'link' => url('countries/' . $iso2),
        'value' => $wrapper->label()
      );
    }
  }
}

function informea_search_ajax_get_ajax_terms($term, &$data) {
  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'taxonomy_term')
    ->entityCondition('bundle', 'thesaurus_informea')
    ->fieldCondition('name_field', 'value', '%' . $term . '%', 'like')
    ->range(0, 5);

  $result = $query->execute();

  if (isset($result['taxonomy_term'])) {
    $tids = array_keys($result['taxonomy_term']);
    $terms = entity_load('taxonomy_term', $tids);

    foreach ($terms as $term) {
      $wrapper = entity_metadata_wrapper('taxonomy_term', $term);

      $img = theme('image', array('path' => drupal_get_path('theme', 'informea_theme') . '/img/logo-leo.png', 'attributes' => array('class' => 'leo-logo-search-image')));

      $data[] = array(
        'category' => t('Terms'),
        'label' => $img . ' ' . $wrapper->label(),
        'link' => url('taxonomy/term/' . $term->tid),
        'value' => $wrapper->label()
      );
    }
  }
}

function informea_search_ajax_get_ajax($term) {
  $data = array(
    array(
      'category' => '',
      'label' => t('Search for: <strong>@term</strong>', array('@term' => $term)),
      'link' => url('search/' . $term),
      'value' => $term
    )
  );

  informea_search_ajax_get_ajax_treaties($term, $data);
  informea_search_ajax_get_ajax_countries($term, $data);
  informea_search_ajax_get_ajax_terms($term, $data);

  return $data;
}

function informea_search_ajax_callback($data) {
  $source = json_encode($data);
  header('Content-Type: application/json');
  print $source;
}

function informea_search_form($form, $form_state) {
  $view = views_get_page_view();
  $viewName = !empty($view) ? $view->name : '';
  switch ($viewName) {
    case 'informea_search':
      $action = 'search';
      break;
    case 'informea_search_bilateral_treaties':
      $action = 'search-bilateral-treaties';
      break;
    case 'informea_search_legislation':
      $action = 'search-legislation';
      break;
    case 'informea_search_court_decision':
      $action = 'search-court-decisions';
      break;
    case 'informea_search_publications':
      $action = 'search-publications';
      break;
    case 'informea_search_goals_and_principles':
      $action = 'search-goals-and-principles';
      break;
    default:
      $action = 'search';
  }
  $search_query = !empty($_GET['search_api_views_fulltext']) ? check_plain($_GET['search_api_views_fulltext']) : '';
  $variant = variable_get('select2_compression_type', 'minified');
  $search_category_options = array(
    'decision' => array(
      'label' => t('Decisions'),
      'is_group_label' => true
    ),

    'national_submissions' => array(
      'label' => t('National Submissions'),
      'is_group_label' => true
    ),
    'action_plan' => array(
      'label' => t('National Plans'),
      'is_group_label' => false
    ),
    'national_report' => array(
      'label' => t('National Reports'),
      'is_group_label' => false
    ),

    'national_legislation_cases' => array(
      'label' => t('National Legislation and Cases'),
      'is_group_label' => true
    ),
    'legislation' => array(
      'label' => t('Legislation'),
      'is_group_label' => false
    ),
    'court_decisions' => array(
      'label' => t('Court Decisions'),
      'is_group_label' => false
    ),

    'documents_literature' => array(
      'label' => t('Documents and Literature'),
      'is_group_label' => true
    ),
    'publication' => array(
      'label' => t('Publications'),
      'is_group_label' => false
    ),
    'manual' => array(
      'label' => t('Manuals'),
      'is_group_label' => false
    ),
    'technical' => array(
      'label' => t('Technical Series'),
      'is_group_label' => false
    ),

    'news' => array(
      'label' => t('News and Events'),
      'is_group_label' => true
    ),

    'contacts_hub' => array(
      'label' => t('Contacts Hub'),
      'is_group_label' => false
    ),
    'all' => array(
      'label' => t('All Categories'),
      'is_group_label' => true,
    ),
  );

  $current_category = _informea_search_get_current_category($viewName);
  $search_category_options[$current_category]['selected'] = true;

  $form = [
    '#id' => 'search-form',
    '#action' =>  url('prepare-search'),
    '#method' => 'get',
    '#always_process' => true,
    '#token' => false,
    '#attributes' => ['class' => ['search-form']],
    'search_api_views_fulltext' => [
      '#theme_wrappers' => array('informea_search_form_wrapper'),
      '#type' => 'textfield',
      '#default_value' => html_entity_decode($search_query),
      '#size' => 25,
      '#maxlength' => 255,
      '#attributes' => array(
        'placeholder' => t('Search by keyword(s)'),
      ),
      '#attached' => array('libraries_load' => array(array('select2', $variant))),
      '#category-options' => $search_category_options,
    ],
    'action' => [
      '#type' => 'hidden',
      '#value' => $action,
    ],
    'actions' => [
      'submit' => [
        '#type' => 'submit',
        '#name' => '',
        '#value' => '',
        '#attributes' => ['class' => ['btn-default', 'element-invisible']],
      ],
    ],
  ];


  $page = page_manager_get_current_page();
  if (!empty($page) && $page['name'] == 'page-region_page' && !empty($page['contexts']['argument_term_1'])) {
    $form['field_region'] = [
      '#type' => 'hidden',
      '#value' => $page['contexts']['argument_term_1']->argument,
    ];
  }

  return $form;
}

function informea_search_external_search() {
  $input = isset($_GET['keys']) ? check_plain($_GET['keys']) : '';
  drupal_goto('search/' . $input);
}

function _informea_search_get_current_category($viewName) {
  switch ($viewName) {
    case 'informea_search':
      if (!empty($_GET['f'])) {
        switch ($_GET['f']) {
          case ['type:action_plan', 'type:national_report']:
          case ['type:national_report', 'type:action_plan']:
            return 'national_submissions';

          case ['type:action_plan']:
            return 'action_plan';

          case ['type:national_report']:
            return 'national_report';

          case ['type:decision']:
            return 'decision';
        }
      }
      break;

    case 'informea_search_legislation':
      return 'legislation';

    case 'informea_search_court_decision':
      return 'court_decisions';

    case 'informea_search_publications':
      if (!empty($_GET['f'])) {
        switch ($_GET['f']) {
          case [
            'type:document',
            'field_document_type:2805',
            'field_document_type:3159'
          ]:
            return 'publication';

          case ['type:document', 'field_document_type:3178']:
            return 'manual';

          case ['type:document', 'field_document_type:2817']:
            return 'technical';
        }
      }
      return 'documents_literature';

    case 'news':
      return 'news';
  }
  return 'all';
}

function informea_search_prepare_search() {
  $options = [];
  $action = !empty($_GET['action']) ? $_GET['action'] : 'search';
  if (!empty($_GET['category'])) {
    $search_category = check_plain($_GET['category']);
    switch ($search_category) {
      case 'decision':
      case 'action_plan':
      case 'national_report':
        $action = 'search';
        $options['query']['f'][] = "type:{$search_category}";
        break;

      case 'national_submissions':
        $action = 'search';
        $options['query']['f'][] = "type:national_report";
        $options['query']['f'][] = "type:action_plan";
        break;

      case 'national_legislation_cases':
      case 'legislation':
        $action = 'search-legislation';
        break;

      case 'court_decisions':
        $action = 'search-court-decisions';
        break;

      case 'documents_literature':
        $action = 'search-publications';
        break;

      case 'publication':
        $action = 'search-publications';
        $options['query']['f'][] = "type:document";
        $options['query']['f'][] = "field_document_type:2805";
        $options['query']['f'][] = "field_document_type:3159";
        break;

      case 'manual':
        $action = 'search-publications';
        $options['query']['f'][] = "type:document";
        $options['query']['f'][] = "field_document_type:3178";
        break;

      case 'technical':
        $action = 'search-publications';
        $options['query']['f'][] = "type:document";
        $options['query']['f'][] = "field_document_type:2817";
        break;


      case 'news':
        $action = 'news';
        break;

    }
  }
  if (!empty($_GET['field_region'])) {
    $options['query']['f'][] = "field_region:{$_GET['field_region']}";
  }
  if (!empty($_GET['search_api_views_fulltext'])) {
    $options['query']['search_api_views_fulltext'] = check_plain($_GET['search_api_views_fulltext']);
  }
  drupal_goto($action, $options);
}

function _informea_search_get_topic_count($topic) {
  $current_view = views_get_page_view();
  $view_name = 'informea_search';
  $display_name = 'page';
  switch ($topic) {
    case 'search-bilateral-treaties':
      $view_name = 'informea_search_bilateral_treaties';
      break;
    case 'search-legislation':
      $view_name = 'informea_search_legislation';
      break;
    case 'search-court-decisions':
      $view_name = 'informea_search_court_decision';
      break;
    case 'search-literature':
      $view_name = 'informea_search_literature';
      break;
    case 'search-publications':
      $view_name = 'informea_search_publications';
      break;
    case 'search-goals-and-principles':
      $view_name = 'informea_search_goals_and_principles';
      break;
  }
  $view = views_get_view($view_name);
  if (is_object($view)) {
    $view->set_display($display_name);
    $view->set_arguments($current_view->args);
    $view->get_total_rows = true;
    $view->pre_execute();
    $view->execute($display_name);
    return $view->total_rows;
  }
  return 0;
}

function informea_search_block_switch_topic_view() {
  $url = check_plain(arg(0));
  $fulltext = '';
  if (!empty($_GET['search_api_views_fulltext'])) {
    $fulltext = $_GET['search_api_views_fulltext'];
  }
  else if (!empty(arg(1))) {
    $fulltext = arg(1);
  }

  $fulltext = htmlspecialchars($fulltext, ENT_NOQUOTES, 'UTF-8');

  $elements = array(
    'search' => t('Multilateral treaties'),
    'search-bilateral-treaties' => t('Bilateral treaties'),
    'search-legislation' => t('Legislation'),
    'search-court-decisions' => t('Court decisions'),
    'search-publications' => t('Documents'),
    'search-goals-and-principles' => t('Goals'),
  );
  $tabs = array();
  foreach($elements as $link_url => $title) {
    $link_options = array('html' => true);
    $link_options['query'] = array('search_api_views_fulltext' => $fulltext);
    if ($link_url == current_path()) {
      $count = _informea_search_get_topic_count($link_url);
      $title .= ' <span class="badge">' . $count . '</span>';
    }
    $tabs[] = array(
      'data' => l($title, $link_url, $link_options),
      'class' => $link_url == $url ? array('active') : array(),
    );
  }

  $ret = array(
    '#theme' => 'item_list',
    '#items' => $tabs,
    '#attributes' => array('class' => array('nav nav-tabs'))
  );
  return $ret;
}

/**
 * Implements hook_form_alter().
 *
 * Hide the form full-text search field to the users. The field is
 * added to allow passing search_api_views_fulltext parameter
 */
function informea_search_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'views_exposed_form') {
    switch ($form['#id']) {
      case 'views-exposed-form-informea-search-page':
      case 'views-exposed-form-informea-search-bilateral-treaties-page':
      case 'views-exposed-form-informea-search-legislation-page':
      case 'views-exposed-form-informea-search-court-decision-page':
      case 'views-exposed-form-informea-search-publications-page':
      case 'views-exposed-form-informea-search-goals-and-principles-page':
        if (isset($_GET['f'])) {
          foreach ($_GET['f'] as $key => $val) {
            $form["f[{$key}]"] = [
              '#type' => 'hidden',
              '#weight' => '50',
              '#value' => $val,
            ];
          }
        }
        break;
    }
  }
}

/**
 * Implements hook_facetapi_widgets().
 */
function informea_search_facetapi_widgets() {
  return array(
    'facetapi_checkbox_links_altered' => array(
      'handler' => array(
        'label' => t('Links with checkboxes (altered by informea)'),
        'class' => 'FacetapiWidgetCheckboxLinksInformea',
        'query types' => array('term', 'date'),
      ),
    ),
  );
}

/**
 * Implements hook_entity_property_info_alter().
 */
function informea_search_entity_property_info_alter(&$info) {
  $info['node']['properties']['title_index'] = array(
    'type' => 'text',
    'label' => t('Title - indexed as string (used for sorting)'),
    'sanitized' => TRUE,
    'getter callback' => '_informea_search_title_index_property_callback',
  );
}

function _informea_search_title_index_property_callback($item) {
  return $item->title;
}
