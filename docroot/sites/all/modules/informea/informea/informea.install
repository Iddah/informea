<?php

function informea_install() {
  $column_size = 2048;
  if (informea_get_mysql_column_size('node', 'title') < $column_size) {
    drupal_set_message("Changing node.title size to $column_size");

    db_drop_index('node', 'node_title_type');
    db_change_field('node', 'title', 'title', array('type' => 'varchar','length' => $column_size));

    db_drop_index('node_revision', 'title');
    db_change_field('node_revision', 'title', 'title', array('type' => 'varchar','length' => $column_size));
  }
}

/**
 * Increase node.title size.
 */
function informea_update_7003() {
  $column_size = 2048;
  if (informea_get_mysql_column_size('node', 'title') < $column_size) {
    drupal_set_message("Changing node.title size to $column_size");
    db_drop_index('node', 'title');
    db_change_field('node', 'title', 'title', array('type' => 'varchar','length' => $column_size));
    db_drop_index('node_revision', 'title');
    db_change_field('node_revision', 'title', 'title', array('type' => 'varchar','length' => $column_size));
  }
  if (informea_get_mysql_column_size('field_data_title_field', 'title_field_value') < $column_size) {
    drupal_set_message("Changing node.title size to $column_size");
    db_change_field('field_data_title_field', 'title_field_value', 'title_field_value', array('type' => 'varchar','length' => $column_size));
    db_change_field('field_revision_title_field', 'title_field_value', 'title_field_value', array('type' => 'varchar','length' => $column_size));
  }
}

/**
 * Function to retrive the size of a MySQL varchar column from a table.
 *
 * @param string $table
 *   Target database table name
 * @param string $column
 *   Target column
 *
 * @return int
 *   Column size in characters
 */
function informea_get_mysql_column_size($table, $column) {
  $result = db_query("
		SELECT CHARACTER_MAXIMUM_LENGTH
		FROM information_schema.columns
		WHERE table_schema = DATABASE()
			AND table_name = :table AND COLUMN_NAME = :column",
    array(':table' => $table, ':column' => $column)
  );
  return $result->fetchField(0);
}

/**
 * Enable seo modules.
 */
function informea_update_7004() {
  $modules = array(
    'metatag',
    'xmlsitemap',
    'xmlsitemap_node',
    'xmlsitemap_i18n',
    'xmlsitemap_menu',
    'xmlsitemap_taxonomy',
    'hreflang',
    'informea_sitemap',
  );
  module_enable($modules);
}

/**
 * Enable autocomplete module and revert admin content view
 */
function informea_update_7005() {
  module_enable(['entityreference_autocomplete']);
  features_revert(array('informea' => ['views_view']));
}

/**
 * Revert search-bilateral-treaties and search-legislation views
 */
function informea_update_7006() {
  features_revert(array('informea_search' => ['views_view']));
}

/**
 * Revert Thesaurus Taxonomy term related bilateral treaties, Taxonomy term related legislations, Search bilateral treaties and Search legislation views
 */
function informea_update_7007() {
  features_revert(array('informea_search' => ['views_view']));
  features_revert(array('thesaurus' => ['views_view']));
}

/**
 * Replace the Multilateral treaties view with a standard Solr view
 */
function informea_update_7008() {
  features_revert(array('informea_search' => ['views_view']));
}

/**
 * Documents disclaimer block
 */
function informea_update_7009() {
  features_revert(array('informea_search' => ['fe_block']));
}

/**
 * Enable recaptcha module.
 * Tour font changes
 */
function informea_update_7010() {
  module_enable(['recaptcha']);
  features_revert(array('informea' => ['captcha_points']));
  features_revert(array('informea' => ['bootstrap_tour']));
}

/**
 * Update breadcrumbs.
 */
function informea_update_7011() {
  features_revert_module('informea');
}


/**
 * Task 185: disable the ajax control that creates automatically the terms.
 */
function informea_update_7012() {
  features_revert_module('declaration');
  features_revert_module('ecolex');
  features_revert_module('treaty');
}

/**
 * Task 224: Usability survey - technical solution
 */
function informea_update_7013() {
  module_enable(['webform_term_opts']);

  _informea_create_survey_webform(
    'STEP 1: Welcome to our testing program',
    'START THE TEST NOW',
    'survey-start',
    'http://e-learning.informea.org/',
    [],
    'survey_start'
  );

  $add_components = [
    array(
      'form_key' => 'when_did_you_run_the_test_date',
      'name' => 'When did you run the test',
      'type' => 'date',
      'value' => 'now',
      'pid' => 0,
      'weight' => 15,
      'extra' => array(
        'exclude' => array(
          'year',
        ),
        'title_display' => 'before',
        'description_above' => 0,
        'private' => 0,
        'wrapper_classes' => '',
        'datepicker' => 0,
        'timezone' => 'user',
        'start_date' => '-2 years',
        'end_date' => '+2 years',
        'year_textfield' => 0,
        'description' => '',
        'analysis' => FALSE,
      ),
      'required' => '1',
      'page_num' => 1,
    ),
    array(
      'form_key' => 'when_did_you_run_the_test_time',
      'name' => '<none>',
      'type' => 'time',
      'value' => '',
      'pid' => 0,
      'weight' => 20,
      'extra' => array(
        'title_display' => 'before',
        'description_above' => 0,
        'private' => 0,
        'wrapper_classes' => '',
        'hourformat' => '24-hour',
        'minuteincrements' => '1',
        'timezone' => 'user',
        'start_time' => '',
        'end_time' => '',
        'description' => '',
        'analysis' => FALSE,
      ),
      'required' => '1',
      'page_num' => 1,
    ),
  ];

  _informea_create_survey_webform(
    'STEP 2: Share your feedback about the test',
    'SHARE FEEDBACK NOW',
    'survey-feedback',
    '<confirmation>',
    $add_components,
    'survey_feedback'
  );
}

function _informea_create_survey_webform($title, $submit_text, $alias, $redirect_url, $add_components = [], $internal_id) {
  $node = new stdClass();
  $node->type = 'webform';
  node_object_prepare($node);
  $node->title = $title;
  $node->language = 'en';
  $node->uid = 1;
  $node->promote = 0;
  $node->comment = 1;
  $node->path = array(
    'pid' => 0,
    'alias' => $alias,
    'pathauto' => 0,
    'language' => 'en',
  );

  // Create the webform components.
  $components = array(
    array(
      'name' => 'Name',
      'form_key' => 'name',
      'type' => 'textfield',
      'mandatory' => 1,
      'weight' => 5,
      'pid' => 0,
      'extra' => array(
        'title_display' => 'inline',
        'private' => 0,
      ),
      'required' => '1',
    ),
    array(
      'name' => 'Field of work',
      'form_key' => 'field_of_work',
      'type' => 'select',
      'mandatory' => 0,
      'weight' => 10,
      'pid' => 0,
      'extra' => array(
        'title_display' => 'inline',
        'private' => 0,
        'aslist' => 1,
        'options_source' => 'vid_45',
      ),
      'required' => '1',
    ),
  );

  if ($add_components) {
    $components = array_merge($components, $add_components);
  }

  // Attach the webform to the node.
  $node->webform = array(
    'confirmation' => '',
    'confirmation_format' => NULL,
    'redirect_url' => $redirect_url,
    'status' => '1',
    'block' => '0',
    'teaser' => '0',
    'allow_draft' => '0',
    'auto_save' => '0',
    'submit_notice' => '1',
    'submit_text' => $submit_text,
    'submit_limit' => '-1', // User can submit more than once.
    'submit_interval' => '-1',
    'total_submit_limit' => '-1',
    'total_submit_interval' => '-1',
    'record_exists' => TRUE,
    'roles' => array(
      '1',
      '2',
    ),
    'emails' => [],
    'components' => $components,
  );

  // Save the node.
  node_save($node);
  if (!empty($node->nid)) {
    variable_set("{$internal_id}_webform_id", $node->nid);
  }
}

/**
 * Task 224: Usability survey - technical solution
 */
function informea_update_7014() {
  features_revert(array('informea' => ['taxonomy','field_base', 'field_instance']));
}

/**
 * Task #251: Re-export feeds node processor mapping
 */
function informea_update_7015() {
  features_revert_module('feeds_news');
}

/**
 * Task #278: New content type - Learning Course
 */
function informea_update_7016() {
  module_enable(['learning_course']);
  features_revert_module('learning_course');
}

/**
 * Task #279: Implement the regional section page
 */
function informea_update_7017() {
  module_enable(['geographic_region']);
  features_revert_module('geographic_region');
}

/**
 * Task #251: Re-export feeds node processor mapping
 */
function informea_update_7018() {
  features_revert_module('feeds_news');
  features_revert_module('document');
  features_revert_module('ecolex');
  features_revert_module('country');
  features_revert_module('country_data');
  features_revert_module('country_deliverable');
  features_revert_module('decision');
  features_revert_module('declaration');
  features_revert_module('goal');
  features_revert_module('meeting');
  features_revert_module('treaty');
}
