<?php

function informea_install() {
  $column_size = 2048;
  if (informea_get_mysql_column_size('node', 'title') < $column_size) {
    drupal_set_message("Changing node.title size to $column_size");

    db_drop_index('node', 'node_title_type');
    db_change_field('node', 'title', 'title', array('type' => 'varchar','length' => $column_size));

    db_drop_index('node_revision', 'title');
    db_change_field('node_revision', 'title', 'title', array('type' => 'varchar','length' => $column_size));
  }
}

/**
 * Increase node.title size.
 */
function informea_update_7003() {
  $column_size = 2048;
  if (informea_get_mysql_column_size('node', 'title') < $column_size) {
    drupal_set_message("Changing node.title size to $column_size");
    db_drop_index('node', 'title');
    db_change_field('node', 'title', 'title', array('type' => 'varchar','length' => $column_size));
    db_drop_index('node_revision', 'title');
    db_change_field('node_revision', 'title', 'title', array('type' => 'varchar','length' => $column_size));
  }
  if (informea_get_mysql_column_size('field_data_title_field', 'title_field_value') < $column_size) {
    drupal_set_message("Changing node.title size to $column_size");
    db_change_field('field_data_title_field', 'title_field_value', 'title_field_value', array('type' => 'varchar','length' => $column_size));
    db_change_field('field_revision_title_field', 'title_field_value', 'title_field_value', array('type' => 'varchar','length' => $column_size));
  }
}

/**
 * Function to retrive the size of a MySQL varchar column from a table.
 *
 * @param string $table
 *   Target database table name
 * @param string $column
 *   Target column
 *
 * @return int
 *   Column size in characters
 */
function informea_get_mysql_column_size($table, $column) {
  $result = db_query("
		SELECT CHARACTER_MAXIMUM_LENGTH
		FROM information_schema.columns
		WHERE table_schema = DATABASE()
			AND table_name = :table AND COLUMN_NAME = :column",
    array(':table' => $table, ':column' => $column)
  );
  return $result->fetchField(0);
}

/**
 * Enable seo modules.
 */
function informea_update_7004() {
  $modules = array(
    'metatag',
    'xmlsitemap',
    'xmlsitemap_node',
    'xmlsitemap_i18n',
    'xmlsitemap_menu',
    'xmlsitemap_taxonomy',
    'hreflang',
    'informea_sitemap',
  );
  module_enable($modules);
}

/**
 * Enable autocomplete module and revert admin content view
 */
function informea_update_7005() {
  module_enable(['entityreference_autocomplete']);
  features_revert(array('informea' => ['views_view']));
}

/**
 * Revert search-bilateral-treaties and search-legislation views
 */
function informea_update_7006() {
  features_revert(array('informea_search' => ['views_view']));
}

/**
 * Revert Thesaurus Taxonomy term related bilateral treaties, Taxonomy term related legislations, Search bilateral treaties and Search legislation views
 */
function informea_update_7007() {
  features_revert(array('informea_search' => ['views_view']));
  features_revert(array('thesaurus' => ['views_view']));
}

/**
 * Replace the Multilateral treaties view with a standard Solr view
 */
function informea_update_7008() {
  features_revert(array('informea_search' => ['views_view']));
}

/**
 * Documents disclaimer block
 */
function informea_update_7009() {
  features_revert(array('informea_search' => ['fe_block']));
}

/**
 * Enable recaptcha module.
 * Tour font changes
 */
function informea_update_7010() {
  module_enable(['recaptcha']);
  features_revert(array('informea' => ['captcha_points']));
  features_revert(array('informea' => ['bootstrap_tour']));
}

/**
 * Update breadcrumbs.
 */
function informea_update_7011() {
  features_revert_module('informea');
}


/**
 * Task 185: disable the ajax control that creates automatically the terms.
 */
function informea_update_7012() {
  features_revert_module('declaration');
  features_revert_module('ecolex');
  features_revert_module('treaty');
}

/**
 * Task 224: Usability survey - technical solution
 */
function informea_update_7013() {
  module_enable(['webform_term_opts']);

  _informea_create_survey_webform(
    'STEP 1: Welcome to our testing program',
    'START THE TEST NOW',
    'survey-start',
    'http://e-learning.informea.org/',
    [],
    'survey_start'
  );

  $add_components = [
    array(
      'form_key' => 'when_did_you_run_the_test_date',
      'name' => 'When did you run the test',
      'type' => 'date',
      'value' => 'now',
      'pid' => 0,
      'weight' => 15,
      'extra' => array(
        'exclude' => array(
          'year',
        ),
        'title_display' => 'before',
        'description_above' => 0,
        'private' => 0,
        'wrapper_classes' => '',
        'datepicker' => 0,
        'timezone' => 'user',
        'start_date' => '-2 years',
        'end_date' => '+2 years',
        'year_textfield' => 0,
        'description' => '',
        'analysis' => FALSE,
      ),
      'required' => '1',
      'page_num' => 1,
    ),
    array(
      'form_key' => 'when_did_you_run_the_test_time',
      'name' => '<none>',
      'type' => 'time',
      'value' => '',
      'pid' => 0,
      'weight' => 20,
      'extra' => array(
        'title_display' => 'before',
        'description_above' => 0,
        'private' => 0,
        'wrapper_classes' => '',
        'hourformat' => '24-hour',
        'minuteincrements' => '1',
        'timezone' => 'user',
        'start_time' => '',
        'end_time' => '',
        'description' => '',
        'analysis' => FALSE,
      ),
      'required' => '1',
      'page_num' => 1,
    ),
  ];

  _informea_create_survey_webform(
    'STEP 2: Share your feedback about the test',
    'SHARE FEEDBACK NOW',
    'survey-feedback',
    '<confirmation>',
    $add_components,
    'survey_feedback'
  );
}

function _informea_create_survey_webform($title, $submit_text, $alias, $redirect_url, $add_components = [], $internal_id) {
  $node = new stdClass();
  $node->type = 'webform';
  node_object_prepare($node);
  $node->title = $title;
  $node->language = 'en';
  $node->uid = 1;
  $node->promote = 0;
  $node->comment = 1;
  $node->path = array(
    'pid' => 0,
    'alias' => $alias,
    'pathauto' => 0,
    'language' => 'en',
  );

  // Create the webform components.
  $components = array(
    array(
      'name' => 'Name',
      'form_key' => 'name',
      'type' => 'textfield',
      'mandatory' => 1,
      'weight' => 5,
      'pid' => 0,
      'extra' => array(
        'title_display' => 'inline',
        'private' => 0,
      ),
      'required' => '1',
    ),
    array(
      'name' => 'Field of work',
      'form_key' => 'field_of_work',
      'type' => 'select',
      'mandatory' => 0,
      'weight' => 10,
      'pid' => 0,
      'extra' => array(
        'title_display' => 'inline',
        'private' => 0,
        'aslist' => 1,
        'options_source' => 'vid_45',
      ),
      'required' => '1',
    ),
  );

  if ($add_components) {
    $components = array_merge($components, $add_components);
  }

  // Attach the webform to the node.
  $node->webform = array(
    'confirmation' => '',
    'confirmation_format' => NULL,
    'redirect_url' => $redirect_url,
    'status' => '1',
    'block' => '0',
    'teaser' => '0',
    'allow_draft' => '0',
    'auto_save' => '0',
    'submit_notice' => '1',
    'submit_text' => $submit_text,
    'submit_limit' => '-1', // User can submit more than once.
    'submit_interval' => '-1',
    'total_submit_limit' => '-1',
    'total_submit_interval' => '-1',
    'record_exists' => TRUE,
    'roles' => array(
      '1',
      '2',
    ),
    'emails' => [],
    'components' => $components,
  );

  // Save the node.
  node_save($node);
  if (!empty($node->nid)) {
    variable_set("{$internal_id}_webform_id", $node->nid);
  }
}

/**
 * Task 224: Usability survey - technical solution
 */
function informea_update_7014() {
  features_revert(array('informea' => ['taxonomy','field_base', 'field_instance']));
}

/**
 * Task #251: Re-export feeds node processor mapping
 */
function informea_update_7015() {
  features_revert_module('feeds_news');
}

/**
 * Task #251: Re-export feeds node processor mapping
 * Task #265: Enforce password policy
 */
function informea_update_7016() {
  module_enable(['xautoload', 'composer_manager', 'password_policy', 'password_strength', 'informea_password_policy']);
  features_revert_module('feeds_news');
  features_revert_module('document');
  features_revert_module('ecolex');
  features_revert_module('country');
  features_revert_module('country_data');
  features_revert_module('country_deliverable');
  features_revert_module('decision');
  features_revert_module('declaration');
  features_revert_module('goal');
  features_revert_module('meeting');
  features_revert_module('treaty');
}

/**
 * Task #278: New content type - Learning Course
 */
function informea_update_7017() {
  module_enable(['learning_course']);
  features_revert_module('learning_course');
}

/**
 * Task #279: Implement the regional section page
 */
function informea_update_7018() {
  module_enable(['geographic_region']);
  features_revert_module('geographic_region');
}

/**
 * Task #279: Display "Take Part" webform
 */
function informea_update_7019() {
  features_revert_module('geographic_region');
}

/**
 * Task #279: Social icons block configuration
 */
function informea_update_7020() {
  variable_set('social_media_links_platforms', [
    'facebook' => [
      'platform_value' => 'informea.org',
      'weight' => '-9',
    ],
    'twitter' => [
      'platform_value' => 'informeaportal',
      'weight' => '-8',
    ],
    'googleplus' => [
      'platform_value' => '',
      'weight' => '-7',
    ],
    'instagram' => [
      'platform_value' => '',
      'weight' => '-6',
    ],
    'linkedin' => [
      'platform_value' => '',
      'weight' => '-5',
    ],
    'pinterest' => [
      'platform_value' => '',
      'weight' => '-4',
    ],
    'vimeo' => [
      'platform_value' => '',
      'weight' => '-3',
    ],
    'youtube' => [
      'platform_value' => '',
      'weight' => '-2',
    ],
    'youtube_channel' => [
      'platform_value' => '',
      'weight' => '-1',
    ],
    'rss' => [
      'platform_value' => '',
      'weight' => '0',
    ],
    'contact' => [
      'platform_value' => '',
      'weight' => '1',
    ],
    'email' => [
      'platform_value' => '',
      'weight' => '2',
    ],
  ]);
  variable_set('social_media_links_icon_style', 'informea_social_icons:48');
}

/**
 * Task 277: Treaties menu - show items in menu based on a new field 'field_show_in_main_menu'
 */
function informea_update_7021() {
  features_revert(array('informea' => ['field_base', 'field_instance']));

  $treaties_in_menu = [264, 304, 255, 262, 263, 257, 258, 305, 268, 272, 270, 256, 274, 259,
    303, 273, 269, 271, 236208, 260, 261, 283, 298, 285, 288, 299, 284, 287, 286, 289, 295, 294,
    275, 276, 281, 278, 277, 279, 297, 292, 293, 291, 296, 300, 290];

  foreach ($treaties_in_menu as $nid) {
    $node = node_load($nid);
    $node->field_show_in_main_menu[LANGUAGE_NONE][0]['value'] = 1;
    node_save($node);
  }
}

/**
 * Task #313 - topics image field.
 */
function informea_update_7022() {
  features_revert(array('treaty' => ['field_base', 'field_instance']));
}


/**
 * Task #313 - disable current frontpage blocks.
 */
function informea_update_7023() {
  db_update('block')
    ->fields(['status' => 0])
    ->condition('bid', [110, 112, 120, 122, 124], 'IN')
    ->execute();
  db_update('block')
    ->fields(['status' => 1, 'weight' => 2, 'region' => 'front_page_content'])
    ->condition('bid', 114)
    ->execute();
}

/**
 * Publish all regions.
 */
function informea_update_7024() {
  $vocabulary = taxonomy_vocabulary_machine_name_load('geographical_region');
  $terms = entity_load('taxonomy_term', FALSE, ['vid' => $vocabulary->vid]);
  foreach ($terms as $term) {
    $term->field_published = [LANGUAGE_NONE => [ 0 => ['value' => 1]]];
    taxonomy_term_save($term);
  }
}

/**
 * Enable InforMEA Topics module.
 */
function informea_update_7025() {
  module_enable(['informea_topics']);
  features_revert_module('informea_topics');
}

/**
 * #252 Create frontpage learning courses view.
 */
function informea_update_7026() {
  features_revert_module('learning_course');
}

/**
 * #252 Place the promoted events / learning courses view in frontpage content region.
 */
function informea_update_7027() {
  features_revert_module('meeting');
}

/**
 * Task #328 - Place language switcher block in inside_nav region
 */
function informea_update_7028() {
  db_update('block')
    ->fields(['status' => 1, 'weight' => 1, 'region' => 'inside_nav'])
    ->condition('bid', 55)
    ->execute();
}

/**
 * Task #328 - Disable secondary menu block
 */
function informea_update_7029() {
  db_update('block')
    ->fields(['status' => 0])
    ->condition('bid', 156)
    ->execute();
}

/**
 * Task #293 - Set orientation of social media icons to horizontal.
 */
function informea_update_7030() {
  variable_set('social_media_links_appearance', array('orientation' => 'h', 'show_name' => 0));
}

/**
 * Task #344 - Documents search view
 */
function informea_update_7031() {
  features_revert_module('document');
  features_revert_module('informea_search');
  features_revert_module('informea');
  features_revert_module('goal');
}

/**
 * Task #344 - Contacts hub search view
 */
function informea_update_7032() {
  features_revert_module('country_data');
  features_revert_module('informea_search');
}

/**
 * Task #348 - Topical landing page
 */
function informea_update_7033() {
  module_enable(array('ds'));
  features_revert_module('treaty');
  features_revert_module('geographic_region');
  features_revert_module('informea_topics');
  features_revert_module('informea');
}

/**
 * #351 - Implement changes to the regional landing page
 */

function informea_update_7034() {
  features_revert_module('geographic_region');
}

/**
 * #324 - Add image processing module
 */
function informea_update_7035() {
  module_enable(array('imagecache_actions'));
  features_revert_module('treaty');
}

/**
 * #351 - Implement changes to the regional landing page
 */
function informea_update_7036() {
  features_revert_module('geographic_region');
}

/**
 * #324 - Enable imagecache_canvasactions module
 */
function informea_update_7037() {
  module_enable(array('imagecache_canvasactions'));
  features_revert_module('informea');
}

/**
 * #326 - Implement changes to the treaty, news, events search item display
 */
function informea_update_7038() {
  features_revert_module('feeds_news');
  features_revert_module('meeting');
  features_revert_module('geographic_region');
  features_revert_module('treaty');
}

/**
 * #326 - Implement changes to the treaty, news, events search item display
 */
function informea_update_7039() {
  features_revert_module('feeds_news');
  features_revert_module('meeting');
  features_revert_module('treaty');
}

/**
 * #326 - Implement changes to the decision & news search item display
 */
function informea_update_7040() {
  features_revert_module('decision');
  features_revert_module('feeds_news');
}

/**
 * #348 - Topical
 */
function informea_update_7041()
{
  module_enable(array('ds_extras', 'ds_format', 'ds_ui'));
  features_revert_module('treaty');
  features_revert_module('informea');
}

/**
 * #326 - Implement changes to the several content type search item display
 */
function informea_update_7042() {
  features_revert_module('country');
  features_revert_module('country_deliverable');
  features_revert_module('decision');
  features_revert_module('meeting');
  features_revert_module('ecolex');
}

/**
 * #326 - Fixed ds settings exported in wrong feature
 */
function informea_update_7043() {
  features_revert_module('informea');
  features_revert_module('ecolex');
}

/**
 * #326 - Created ds field for that copies event_calendar_date
 * used it to split the date into 2 spans (day + month).
 */
function informea_update_7044() {
  features_revert_module('meeting');
}

/**
 * #326 - Fixed ds settings exported in wrong feature
 */
function informea_update_7045() {
  features_revert_module('country');
}

/**
 * #348,#351 - Topical & Regional treaty.
 */
function informea_update_7046() {
  features_revert_module('geographic_region');
  features_revert_module('informea');
  features_revert_module('informea_topics');
  features_revert_module('treaty');
}

/**
 * #326 - Several display updates
 */
function informea_update_7047() {
  features_revert_module('country');
  features_revert_module('country_deliverable');
  features_revert_module('ecolex');
  features_revert_module('meeting');
  features_revert_module('treaty');
}

/**
 * #351 - Glossary terms related updates
 */
function informea_update_7048() {
  features_revert_module('treaty');
}

/**
 * #351 - Changed document and events column classes on regional & topical landing pages
 */
function informea_update_7049() {
  features_revert_module('geographic_region');
  features_revert_module('informea_topics');
}

/**
 * #351 - Added regional & topical landing page view modes to be used with all content types, added topical display mode to news & events view
 */
function informea_update_7050() {
  features_revert_module('feeds_news');
  features_revert_module('geographic_region');
  features_revert_module('informea');
  features_revert_module('informea_topics');
  features_revert_module('meeting');
  features_revert_module('treaty');
}

/**
 * #351 - Country flag field is available on all view modes
 */
function informea_update_7051() {
  features_revert_module('country');
}

/**
 * #351 - Added image_only view mode for more general use
 */
function informea_update_7052() {
  features_revert_module('country');
  features_revert_module('decision');
  features_revert_module('informea');
  features_revert_module('meeting');
  features_revert_module('treaty');
}

/**
 * #351 - Fixed event region wrong format
 */
function informea_update_7053() {
  features_revert_module('meeting');
}

/**
 * #351 - Added post date to be displayed in news and events view, added filter by post date and date descending
 */
function informea_update_7054() {
    features_revert_module('informea_search');
    features_revert_module('meeting');
    features_revert_module('feeds_news');
    features_revert_module('geographic_region');
}
