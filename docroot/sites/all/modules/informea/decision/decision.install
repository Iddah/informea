<?php


/**
 * Delete old CBD decisions
 */
function decision_update_7001() {
  /*
   SELECT a.nid FROM node a
      INNER JOIN field_data_field_treaty b ON a.nid = b.entity_id
    WHERE
      AND b.field_treaty_target_id IN (255, 262, 263, 318)
      AND a.type = 'decision'
      AND a.nid NOT IN (SELECT destid1 FROM migrate_map_odata_cbd_decisions);
   */
  $q = db_query("
    SELECT a.nid FROM node a
      INNER JOIN field_data_field_treaty b ON a.nid = b.entity_id
    WHERE
      b.field_treaty_target_id IN (255, 262, 263, 318)
      AND a.type = 'decision'
      AND a.nid NOT IN (SELECT destid1 FROM migrate_map_odata_cbd_decisions);
  ");
  $nids = $q->fetchCol();
  node_delete_multiple($nids);
}

/**
 * Enable some modules and revert decision.
 */
function decision_update_7002(){
  $modules = array('panels', 'page_manager', 'views_content', 'panels_breadcrumbs');
  module_enable($modules);
  features_revert_module('decision');
}

/** Delete old Ramsar decisions */
function decision_update_7003() {
  /*
    SELECT a.nid FROM node a
      INNER JOIN field_data_field_treaty b ON a.nid = b.entity_id
    LEFT JOIN migrate_map_odata_ramsar_decisions c ON a.nid = c.destid1
      WHERE a.type = 'decision'
        AND b.field_treaty_target_id = 272
        AND c.destid1 IS NULL;
   */

  $q = db_query("
    SELECT a.nid FROM node a
      INNER JOIN field_data_field_treaty b ON a.nid = b.entity_id
    LEFT JOIN migrate_map_odata_ramsar_decisions c ON a.nid = c.destid1
      WHERE a.type = 'decision'
        AND b.field_treaty_target_id = 272
        AND c.destid1 IS NULL;
  ");
  $nids = $q->fetchCol();
  node_delete_multiple($nids);
}

function decision_update_7004() {
  features_revert_module('decision');
}

function decision_update_7005() {
  $type = 'node';
  $q = db_select('node', 'n')->fields('n', array('nid'));
  $q->leftJoin('search_api_item', 'sai', 'n.nid = sai.item_id');
  $q->condition('sai.item_id', NULL);
  $q->condition('n.status', '1');
  $q->condition('n.type', 'decision');

  $result = $q->execute()->fetchAllKeyed(0, 0);
  foreach ($result as $nid) {
    $entity = node_load($nid);
    list($id) = entity_extract_ids($type, $entity);
    if (isset($id)) {
      search_api_track_item_insert($type, array($id));
      $combined_id = $type . '/' . $id;
      search_api_track_item_insert('multiple', array($combined_id));
    }
  }
}
