diff --git a/xmlsitemap/xmlsitemap.install b/xmlsitemap/xmlsitemap.install
index 916ebec..1497e7e 100644
--- a/xmlsitemap/xmlsitemap.install
+++ b/xmlsitemap/xmlsitemap.install
@@ -239,7 +239,7 @@ function xmlsitemap_schema() {
         'default' => 0,
       ),
     ),
-    'primary key' => array('id', 'type'),
+    'primary key' => array('id', 'type', 'language'),
     'indexes' => array(
       'loc' => array('loc'),
       'access_status_loc' => array('access', 'status', 'loc'),
@@ -568,3 +568,10 @@ function _xmlsitemap_sitemap_rehash_all() {
     }
   }
 }
+
+function xmlsitemap_update_7204() {
+  // Drop all primary keys.
+  db_drop_primary_key('xmlsitemap');
+  // Add primary keys.
+  db_add_primary_key('xmlsitemap', array('id', 'type', 'language'));
+}
diff --git a/xmlsitemap/xmlsitemap.module b/xmlsitemap/xmlsitemap.module
index 09d02ea..4fbcf1f 100644
--- a/xmlsitemap/xmlsitemap.module
+++ b/xmlsitemap/xmlsitemap.module
@@ -539,8 +539,9 @@ function xmlsitemap_sitemap_uri(stdClass $sitemap) {
  * @return
  *   A sitemap link (array) or FALSE if the conditions were not found.
  */
-function xmlsitemap_link_load($entity_type, $entity_id) {
-  $link = xmlsitemap_link_load_multiple(array('type' => $entity_type, 'id' => $entity_id));
+function xmlsitemap_link_load($entity_type, $entity_id, $conditions = array()) {
+  $conditions = array_merge(array('type' => $entity_type, 'id' => $entity_id), $conditions);
+  $link = xmlsitemap_link_load_multiple(array('type' => $entity_type, 'id' => $entity_id, $conditions));
   return $link ? reset($link) : FALSE;
 }
 
@@ -603,7 +604,7 @@ function xmlsitemap_link_save(array $link, array $context = array()) {
     $link['changecount'] = 0;
   }
 
-  $existing = db_query_range("SELECT loc, access, status, lastmod, priority, changefreq, changecount, language FROM {xmlsitemap} WHERE type = :type AND id = :id", 0, 1, array(':type' => $link['type'], ':id' => $link['id']))->fetchAssoc();
+  $existing = db_query_range("SELECT loc, access, status, lastmod, priority, changefreq, changecount, language FROM {xmlsitemap} WHERE type = :type AND id = :id AND language = :language", 0, 1, array(':type' => $link['type'], ':id' => $link['id'], ':language' => $link['language']))->fetchAssoc();
 
   // Check if this is a changed link and set the regenerate flag if necessary.
   if (!variable_get('xmlsitemap_regenerate_needed', FALSE)) {
@@ -612,7 +613,7 @@ function xmlsitemap_link_save(array $link, array $context = array()) {
 
   // Save the link and allow other modules to respond to the link being saved.
   if ($existing) {
-    drupal_write_record('xmlsitemap', $link, array('type', 'id'));
+    drupal_write_record('xmlsitemap', $link, array('type', 'id', 'language'));
     module_invoke_all('xmlsitemap_link_update', $link, $context);
   }
   else {
diff --git a/xmlsitemap/xmlsitemap_node/xmlsitemap_node.module b/xmlsitemap/xmlsitemap_node/xmlsitemap_node.module
index 3d0e534..e961930 100644
--- a/xmlsitemap/xmlsitemap_node/xmlsitemap_node.module
+++ b/xmlsitemap/xmlsitemap_node/xmlsitemap_node.module
@@ -39,8 +39,18 @@ function xmlsitemap_node_xmlsitemap_index_links($limit) {
 function xmlsitemap_node_xmlsitemap_process_node_links(array $nids) {
   $nodes = node_load_multiple($nids);
   foreach ($nodes as $node) {
-    $link = xmlsitemap_node_create_link($node);
-    xmlsitemap_link_save($link, array($link['type'] => $node));
+    if (!empty($node->translations->data)) {
+      foreach (array_keys($node->translations->data) as $lang) {
+        $link = xmlsitemap_node_create_link($node, $lang);
+        xmlsitemap_link_save($link, array($link['type'] => $node));
+      }
+    }
+    else {
+      $link = xmlsitemap_node_create_link($node, $node->language);
+      xmlsitemap_link_save($link, array($link['type'] => $node));
+    }
   }
 }
 
@@ -48,14 +58,16 @@ function xmlsitemap_node_xmlsitemap_process_node_links(array $nids) {
  * Implements hook_node_insert().
  */
 function xmlsitemap_node_node_insert(stdClass $node) {
-  xmlsitemap_node_node_update($node);
+  global $language;
+  xmlsitemap_node_node_update($node, $language->language);
 }
 
 /**
  * Implements hook_node_update().
  */
 function xmlsitemap_node_node_update(stdClass $node) {
-  $link = xmlsitemap_node_create_link($node);
+  global $language;
+  $link = xmlsitemap_node_create_link($node, $language->language);
   xmlsitemap_link_save($link, array($link['type'] => $node));
 }
 
@@ -167,10 +179,10 @@ function xmlsitemap_node_get_timestamps(stdClass $node) {
  * @param $node
  *   A node object.
  */
-function xmlsitemap_node_create_link(stdClass $node) {
+function xmlsitemap_node_create_link(stdClass $node, $lang = LANGUAGE_NONE) {
   if (!isset($node->xmlsitemap) || !is_array($node->xmlsitemap)) {
     $node->xmlsitemap = array();
-    if ($node->nid && $link = xmlsitemap_link_load('node', $node->nid)) {
+    if ($node->nid && $link = xmlsitemap_link_load('node', $node->nid, array('language' => $lang))) {
       $node->xmlsitemap = $link;
     }
   }
@@ -204,7 +216,7 @@ function xmlsitemap_node_create_link(stdClass $node) {
   $node->xmlsitemap['loc'] = $uri['path'];
   $node->xmlsitemap['lastmod'] = count($timestamps) ? max($timestamps) : 0;
   $node->xmlsitemap['access'] = $node->nid ? xmlsitemap_node_view_access($node, drupal_anonymous_user()) : 1;
-  $node->xmlsitemap['language'] = isset($node->language) ? $node->language : LANGUAGE_NONE;
+  $node->xmlsitemap['language'] = $lang;
 
   return $node->xmlsitemap;
 }
